# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/clanbomber
pkgincludedir = $(includedir)/clanbomber
pkglibdir = $(libdir)/clanbomber
pkglibexecdir = $(libexecdir)/clanbomber
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
#am__append_1 = find_bin
#am__append_2 = find_bin/libfb.a
bin_PROGRAMS = clanbomber$(EXEEXT)
#am__append_3 = \
#	Console.cpp

#am__append_4 = \
#	Disease_Slow.cpp \
#	Disease_Slow.hpp \
#	Extra_Snail.cpp \
#	Extra_Snail.hpp

subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_boost_asio.m4 \
	$(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/m4/ax_boost_thread.m4 \
	$(top_srcdir)/m4/ax_compute_relative_paths.m4 \
	$(top_srcdir)/m4/ax_compute_standard_relative_paths.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/ax_normalize_path.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/progtest.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__clanbomber_SOURCES_DIST = Bomb.cpp Bomb.h Bomber.cpp Bomber.h \
	Bomber_Corpse.cpp Bomber_Corpse.h Chat.cpp Chat.h \
	ClanBomber.cpp ClanBomber.h Client.cpp Client.h \
	ClientSetup.cpp ClientSetup.h GameConfig.cpp GameConfig.h \
	Controller.cpp Controller.h Controller_AI.cpp Controller_AI.h \
	Controller_AI_mass.cpp Controller_AI_mass.h \
	Controller_Joystick.cpp Controller_Joystick.h \
	Controller_RCMouse.cpp Controller_RCMouse.h \
	Controller_Keyboard.cpp Controller_Keyboard.h Corpse_Part.cpp \
	Corpse_Part.h Credits.cpp Credits.h Disease.cpp Disease.h \
	Disease_Fast.cpp Disease_Fast.h Disease_Frozen.cpp \
	Disease_Frozen.h Disease_PutBomb.cpp Disease_PutBomb.h \
	Disease_Stoned.cpp Disease_Stoned.h Explosion.cpp Explosion.h \
	Extra.cpp Extra.h Extra_Bomb.cpp Extra_Bomb.h Extra_Glove.cpp \
	Extra_Glove.h Extra_Joint.cpp Extra_Joint.h Extra_Kick.cpp \
	Extra_Kick.h Extra_Koks.cpp Extra_Koks.h Extra_Power.cpp \
	Extra_Power.h Extra_Skateboard.cpp Extra_Skateboard.h \
	Extra_Viagra.cpp Extra_Viagra.h Event.cpp Event.h \
	GameObject.cpp GameObject.h GameStatus.cpp GameStatus.h \
	GameStatus_Team.cpp GameStatus_Team.h Map.cpp Map.h \
	MapEditor.cpp MapEditor.h MapEntry.cpp MapEntry.h \
	MapSelector.cpp MapSelector.h MapTile.cpp MapTile.h \
	MapTile_Arrow.cpp MapTile_Arrow.h MapTile_Box.cpp \
	MapTile_Box.h MapTile_Ground.cpp MapTile_Ground.h \
	MapTile_Ice.cpp MapTile_Ice.h MapTile_None.cpp MapTile_None.h \
	MapTile_Trap.cpp MapTile_Trap.h MapTile_Wall.cpp \
	MapTile_Wall.h Menu.cpp Menu.h Mutex.cpp Mutex.h Observer.cpp \
	Observer.h PlayerSetup.cpp PlayerSetup.h Resources.cpp \
	Resources.h Server.cpp Server.h ServerSetup.cpp ServerSetup.h \
	Timer.cpp Timer.h Thread.cpp Thread.h Utils.cpp Utils.h \
	gettext.h UtilsThreads.cpp UtilsThreads.h UtilsCL_Vector.h \
	UtilsAccess.cpp UtilsAccess.h UtilsSleep.cpp UtilsSleep.h \
	UtilsGetHome.cpp UtilsGetHome.h Console.cpp Disease_Slow.cpp \
	Disease_Slow.hpp Extra_Snail.cpp Extra_Snail.hpp
#am__objects_1 = clanbomber-Console.$(OBJEXT)
#am__objects_2 = clanbomber-Disease_Slow.$(OBJEXT) \
#	clanbomber-Extra_Snail.$(OBJEXT)
am_clanbomber_OBJECTS = clanbomber-Bomb.$(OBJEXT) \
	clanbomber-Bomber.$(OBJEXT) clanbomber-Bomber_Corpse.$(OBJEXT) \
	clanbomber-Chat.$(OBJEXT) clanbomber-ClanBomber.$(OBJEXT) \
	clanbomber-Client.$(OBJEXT) clanbomber-ClientSetup.$(OBJEXT) \
	clanbomber-GameConfig.$(OBJEXT) \
	clanbomber-Controller.$(OBJEXT) \
	clanbomber-Controller_AI.$(OBJEXT) \
	clanbomber-Controller_AI_mass.$(OBJEXT) \
	clanbomber-Controller_Joystick.$(OBJEXT) \
	clanbomber-Controller_RCMouse.$(OBJEXT) \
	clanbomber-Controller_Keyboard.$(OBJEXT) \
	clanbomber-Corpse_Part.$(OBJEXT) clanbomber-Credits.$(OBJEXT) \
	clanbomber-Disease.$(OBJEXT) clanbomber-Disease_Fast.$(OBJEXT) \
	clanbomber-Disease_Frozen.$(OBJEXT) \
	clanbomber-Disease_PutBomb.$(OBJEXT) \
	clanbomber-Disease_Stoned.$(OBJEXT) \
	clanbomber-Explosion.$(OBJEXT) clanbomber-Extra.$(OBJEXT) \
	clanbomber-Extra_Bomb.$(OBJEXT) \
	clanbomber-Extra_Glove.$(OBJEXT) \
	clanbomber-Extra_Joint.$(OBJEXT) \
	clanbomber-Extra_Kick.$(OBJEXT) \
	clanbomber-Extra_Koks.$(OBJEXT) \
	clanbomber-Extra_Power.$(OBJEXT) \
	clanbomber-Extra_Skateboard.$(OBJEXT) \
	clanbomber-Extra_Viagra.$(OBJEXT) clanbomber-Event.$(OBJEXT) \
	clanbomber-GameObject.$(OBJEXT) \
	clanbomber-GameStatus.$(OBJEXT) \
	clanbomber-GameStatus_Team.$(OBJEXT) clanbomber-Map.$(OBJEXT) \
	clanbomber-MapEditor.$(OBJEXT) clanbomber-MapEntry.$(OBJEXT) \
	clanbomber-MapSelector.$(OBJEXT) clanbomber-MapTile.$(OBJEXT) \
	clanbomber-MapTile_Arrow.$(OBJEXT) \
	clanbomber-MapTile_Box.$(OBJEXT) \
	clanbomber-MapTile_Ground.$(OBJEXT) \
	clanbomber-MapTile_Ice.$(OBJEXT) \
	clanbomber-MapTile_None.$(OBJEXT) \
	clanbomber-MapTile_Trap.$(OBJEXT) \
	clanbomber-MapTile_Wall.$(OBJEXT) clanbomber-Menu.$(OBJEXT) \
	clanbomber-Mutex.$(OBJEXT) clanbomber-Observer.$(OBJEXT) \
	clanbomber-PlayerSetup.$(OBJEXT) \
	clanbomber-Resources.$(OBJEXT) clanbomber-Server.$(OBJEXT) \
	clanbomber-ServerSetup.$(OBJEXT) clanbomber-Timer.$(OBJEXT) \
	clanbomber-Thread.$(OBJEXT) clanbomber-Utils.$(OBJEXT) \
	clanbomber-UtilsThreads.$(OBJEXT) \
	clanbomber-UtilsAccess.$(OBJEXT) \
	clanbomber-UtilsSleep.$(OBJEXT) \
	clanbomber-UtilsGetHome.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2)
clanbomber_OBJECTS = $(am_clanbomber_OBJECTS)
am__DEPENDENCIES_1 =
clanbomber_DEPENDENCIES = cbe/libcbe.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) $(am__append_2)
clanbomber_LINK = $(CXXLD) $(clanbomber_CXXFLAGS) $(CXXFLAGS) \
	$(clanbomber_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/clanbomber-Bomb.Po \
	./$(DEPDIR)/clanbomber-Bomber.Po \
	./$(DEPDIR)/clanbomber-Bomber_Corpse.Po \
	./$(DEPDIR)/clanbomber-Chat.Po \
	./$(DEPDIR)/clanbomber-ClanBomber.Po \
	./$(DEPDIR)/clanbomber-Client.Po \
	./$(DEPDIR)/clanbomber-ClientSetup.Po \
	./$(DEPDIR)/clanbomber-Console.Po \
	./$(DEPDIR)/clanbomber-Controller.Po \
	./$(DEPDIR)/clanbomber-Controller_AI.Po \
	./$(DEPDIR)/clanbomber-Controller_AI_mass.Po \
	./$(DEPDIR)/clanbomber-Controller_Joystick.Po \
	./$(DEPDIR)/clanbomber-Controller_Keyboard.Po \
	./$(DEPDIR)/clanbomber-Controller_RCMouse.Po \
	./$(DEPDIR)/clanbomber-Corpse_Part.Po \
	./$(DEPDIR)/clanbomber-Credits.Po \
	./$(DEPDIR)/clanbomber-Disease.Po \
	./$(DEPDIR)/clanbomber-Disease_Fast.Po \
	./$(DEPDIR)/clanbomber-Disease_Frozen.Po \
	./$(DEPDIR)/clanbomber-Disease_PutBomb.Po \
	./$(DEPDIR)/clanbomber-Disease_Slow.Po \
	./$(DEPDIR)/clanbomber-Disease_Stoned.Po \
	./$(DEPDIR)/clanbomber-Event.Po \
	./$(DEPDIR)/clanbomber-Explosion.Po \
	./$(DEPDIR)/clanbomber-Extra.Po \
	./$(DEPDIR)/clanbomber-Extra_Bomb.Po \
	./$(DEPDIR)/clanbomber-Extra_Glove.Po \
	./$(DEPDIR)/clanbomber-Extra_Joint.Po \
	./$(DEPDIR)/clanbomber-Extra_Kick.Po \
	./$(DEPDIR)/clanbomber-Extra_Koks.Po \
	./$(DEPDIR)/clanbomber-Extra_Power.Po \
	./$(DEPDIR)/clanbomber-Extra_Skateboard.Po \
	./$(DEPDIR)/clanbomber-Extra_Snail.Po \
	./$(DEPDIR)/clanbomber-Extra_Viagra.Po \
	./$(DEPDIR)/clanbomber-GameConfig.Po \
	./$(DEPDIR)/clanbomber-GameObject.Po \
	./$(DEPDIR)/clanbomber-GameStatus.Po \
	./$(DEPDIR)/clanbomber-GameStatus_Team.Po \
	./$(DEPDIR)/clanbomber-Map.Po \
	./$(DEPDIR)/clanbomber-MapEditor.Po \
	./$(DEPDIR)/clanbomber-MapEntry.Po \
	./$(DEPDIR)/clanbomber-MapSelector.Po \
	./$(DEPDIR)/clanbomber-MapTile.Po \
	./$(DEPDIR)/clanbomber-MapTile_Arrow.Po \
	./$(DEPDIR)/clanbomber-MapTile_Box.Po \
	./$(DEPDIR)/clanbomber-MapTile_Ground.Po \
	./$(DEPDIR)/clanbomber-MapTile_Ice.Po \
	./$(DEPDIR)/clanbomber-MapTile_None.Po \
	./$(DEPDIR)/clanbomber-MapTile_Trap.Po \
	./$(DEPDIR)/clanbomber-MapTile_Wall.Po \
	./$(DEPDIR)/clanbomber-Menu.Po ./$(DEPDIR)/clanbomber-Mutex.Po \
	./$(DEPDIR)/clanbomber-Observer.Po \
	./$(DEPDIR)/clanbomber-PlayerSetup.Po \
	./$(DEPDIR)/clanbomber-Resources.Po \
	./$(DEPDIR)/clanbomber-Server.Po \
	./$(DEPDIR)/clanbomber-ServerSetup.Po \
	./$(DEPDIR)/clanbomber-Thread.Po \
	./$(DEPDIR)/clanbomber-Timer.Po \
	./$(DEPDIR)/clanbomber-Utils.Po \
	./$(DEPDIR)/clanbomber-UtilsAccess.Po \
	./$(DEPDIR)/clanbomber-UtilsGetHome.Po \
	./$(DEPDIR)/clanbomber-UtilsSleep.Po \
	./$(DEPDIR)/clanbomber-UtilsThreads.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(clanbomber_SOURCES)
DIST_SOURCES = $(am__clanbomber_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = maps pics wavs fonts menuentry cbe find_bin
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /workspaces/ClanBomber/build-aux/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /workspaces/ClanBomber/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /workspaces/ClanBomber/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /workspaces/ClanBomber/build-aux/missing automake-1.16
AWK = gawk
BOOST_ASIO_LIB = -lboost_system
BOOST_CPPFLAGS = -I/usr/include
BOOST_FILESYSTEM_LIB = -lboost_filesystem
BOOST_LDFLAGS = -L/usr/lib/x86_64-linux-gnu
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options
BOOST_THREAD_LIB = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
GETTEXT_MACRO_VERSION = 0.19
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GREP = /usr/bin/grep
HAVE_CXX11 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
LDFLAGS = 
LIBGUILE_CFLAGS = 
LIBGUILE_LIBS = 
LIBICONV = -liconv
LIBINTL = 
LIBOBJS = 
LIBS = 
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /workspaces/ClanBomber/build-aux/missing makeinfo
MKDIR_P = /usr/bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGFMT_015 = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
OBJEXT = o
OPENAL_CFLAGS = 
OPENAL_LIBS = 
PACKAGE = clanbomber
PACKAGE_BUGREPORT = rsl@member.fsf.org
PACKAGE_NAME = ClanBomber
PACKAGE_STRING = ClanBomber 2.2.0
PACKAGE_TARNAME = clanbomber
PACKAGE_URL = 
PACKAGE_VERSION = 2.2.0
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POSUB = po
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
RELATIVE_DATADIR = 
RELATIVE_LOCALEDIR = 
SDL_CFLAGS = -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL
SDL_GFX_CFLAGS = -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL
SDL_GFX_LIBS = -lSDL_gfx -lSDL
SDL_IMAGE_CFLAGS = -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL
SDL_IMAGE_LIBS = -lSDL_image -lSDL
SDL_LIBS = -lSDL
SDL_MIXER_CFLAGS = -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL
SDL_MIXER_LIBS = -lSDL_mixer -lSDL
SDL_TTF_CFLAGS = -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL
SDL_TTF_LIBS = -lSDL_ttf -lSDL
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
USE_NLS = yes
VERSION = 2.2.0
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
abs_builddir = /workspaces/ClanBomber/src
abs_srcdir = /workspaces/ClanBomber/src
abs_top_builddir = /workspaces/ClanBomber
abs_top_srcdir = /workspaces/ClanBomber
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /workspaces/ClanBomber/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
SUBDIRS = maps pics wavs fonts menuentry cbe $(am__append_1)
cb_datadir = $(datadir)/$(PACKAGE)
#cb_datadir = $(RELATIVE_DATADIR)/$(PACKAGE)
cb_localedir = $(localedir)
#cb_localedir = $(RELATIVE_LOCALEDIR)
clanbomber_CXXFLAGS = \
	$(PTHREAD_CFLAGS) \
	$(SDL_CFLAGS) \
	$(SDL_IMAGE_CFLAGS) \
	$(SDL_MIXER_CFLAGS) \
	$(SDL_TTF_CFLAGS) \
	$(SDL_GFX_CFLAGS) \
	$(OPENAL_CPPFLAGS) \
	$(BOOST_CPPFLAGS) \
	-DCB_DATADIR=\"$(cb_datadir)\" \
	-DCB_LOCALEDIR=\"$(cb_localedir)\"

clanbomber_LDFLAGS = \
	$(BOOST_LDFLAGS)

clanbomber_LDADD = cbe/libcbe.a $(PTHREAD_LIBS) $(SDL_LIBS) \
	$(SDL_IMAGE_LIBS) $(SDL_MIXER_LIBS) $(SDL_TTF_LIBS) \
	$(SDL_GFX_LIBS) $(LIBINTL) $(LIBGUILE_LIBS) $(BOOST_ASIO_LIB) \
	$(BOOST_FILESYSTEM_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) \
	$(BOOST_THREAD_LIB) $(OPENAL_LIBS) $(am__append_2)
clanbomber_SOURCES = Bomb.cpp Bomb.h Bomber.cpp Bomber.h \
	Bomber_Corpse.cpp Bomber_Corpse.h Chat.cpp Chat.h \
	ClanBomber.cpp ClanBomber.h Client.cpp Client.h \
	ClientSetup.cpp ClientSetup.h GameConfig.cpp GameConfig.h \
	Controller.cpp Controller.h Controller_AI.cpp Controller_AI.h \
	Controller_AI_mass.cpp Controller_AI_mass.h \
	Controller_Joystick.cpp Controller_Joystick.h \
	Controller_RCMouse.cpp Controller_RCMouse.h \
	Controller_Keyboard.cpp Controller_Keyboard.h Corpse_Part.cpp \
	Corpse_Part.h Credits.cpp Credits.h Disease.cpp Disease.h \
	Disease_Fast.cpp Disease_Fast.h Disease_Frozen.cpp \
	Disease_Frozen.h Disease_PutBomb.cpp Disease_PutBomb.h \
	Disease_Stoned.cpp Disease_Stoned.h Explosion.cpp Explosion.h \
	Extra.cpp Extra.h Extra_Bomb.cpp Extra_Bomb.h Extra_Glove.cpp \
	Extra_Glove.h Extra_Joint.cpp Extra_Joint.h Extra_Kick.cpp \
	Extra_Kick.h Extra_Koks.cpp Extra_Koks.h Extra_Power.cpp \
	Extra_Power.h Extra_Skateboard.cpp Extra_Skateboard.h \
	Extra_Viagra.cpp Extra_Viagra.h Event.cpp Event.h \
	GameObject.cpp GameObject.h GameStatus.cpp GameStatus.h \
	GameStatus_Team.cpp GameStatus_Team.h Map.cpp Map.h \
	MapEditor.cpp MapEditor.h MapEntry.cpp MapEntry.h \
	MapSelector.cpp MapSelector.h MapTile.cpp MapTile.h \
	MapTile_Arrow.cpp MapTile_Arrow.h MapTile_Box.cpp \
	MapTile_Box.h MapTile_Ground.cpp MapTile_Ground.h \
	MapTile_Ice.cpp MapTile_Ice.h MapTile_None.cpp MapTile_None.h \
	MapTile_Trap.cpp MapTile_Trap.h MapTile_Wall.cpp \
	MapTile_Wall.h Menu.cpp Menu.h Mutex.cpp Mutex.h Observer.cpp \
	Observer.h PlayerSetup.cpp PlayerSetup.h Resources.cpp \
	Resources.h Server.cpp Server.h ServerSetup.cpp ServerSetup.h \
	Timer.cpp Timer.h Thread.cpp Thread.h Utils.cpp Utils.h \
	gettext.h UtilsThreads.cpp UtilsThreads.h UtilsCL_Vector.h \
	UtilsAccess.cpp UtilsAccess.h UtilsSleep.cpp UtilsSleep.h \
	UtilsGetHome.cpp UtilsGetHome.h $(am__append_3) \
	$(am__append_4)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clanbomber$(EXEEXT): $(clanbomber_OBJECTS) $(clanbomber_DEPENDENCIES) $(EXTRA_clanbomber_DEPENDENCIES) 
	@rm -f clanbomber$(EXEEXT)
	$(AM_V_CXXLD)$(clanbomber_LINK) $(clanbomber_OBJECTS) $(clanbomber_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/clanbomber-Bomb.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Bomber.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Bomber_Corpse.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Chat.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-ClanBomber.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Client.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-ClientSetup.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Console.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Controller.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Controller_AI.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Controller_AI_mass.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Controller_Joystick.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Controller_Keyboard.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Controller_RCMouse.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Corpse_Part.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Credits.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Disease.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Disease_Fast.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Disease_Frozen.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Disease_PutBomb.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Disease_Slow.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Disease_Stoned.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Event.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Explosion.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Extra.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Extra_Bomb.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Extra_Glove.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Extra_Joint.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Extra_Kick.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Extra_Koks.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Extra_Power.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Extra_Skateboard.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Extra_Snail.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Extra_Viagra.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-GameConfig.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-GameObject.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-GameStatus.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-GameStatus_Team.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Map.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-MapEditor.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-MapEntry.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-MapSelector.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-MapTile.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-MapTile_Arrow.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-MapTile_Box.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-MapTile_Ground.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-MapTile_Ice.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-MapTile_None.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-MapTile_Trap.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-MapTile_Wall.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Menu.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Mutex.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Observer.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-PlayerSetup.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Resources.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Server.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-ServerSetup.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Thread.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Timer.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-Utils.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-UtilsAccess.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-UtilsGetHome.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-UtilsSleep.Po # am--include-marker
include ./$(DEPDIR)/clanbomber-UtilsThreads.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

clanbomber-Bomb.o: Bomb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Bomb.o -MD -MP -MF $(DEPDIR)/clanbomber-Bomb.Tpo -c -o clanbomber-Bomb.o `test -f 'Bomb.cpp' || echo '$(srcdir)/'`Bomb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Bomb.Tpo $(DEPDIR)/clanbomber-Bomb.Po
#	$(AM_V_CXX)source='Bomb.cpp' object='clanbomber-Bomb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Bomb.o `test -f 'Bomb.cpp' || echo '$(srcdir)/'`Bomb.cpp

clanbomber-Bomb.obj: Bomb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Bomb.obj -MD -MP -MF $(DEPDIR)/clanbomber-Bomb.Tpo -c -o clanbomber-Bomb.obj `if test -f 'Bomb.cpp'; then $(CYGPATH_W) 'Bomb.cpp'; else $(CYGPATH_W) '$(srcdir)/Bomb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Bomb.Tpo $(DEPDIR)/clanbomber-Bomb.Po
#	$(AM_V_CXX)source='Bomb.cpp' object='clanbomber-Bomb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Bomb.obj `if test -f 'Bomb.cpp'; then $(CYGPATH_W) 'Bomb.cpp'; else $(CYGPATH_W) '$(srcdir)/Bomb.cpp'; fi`

clanbomber-Bomber.o: Bomber.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Bomber.o -MD -MP -MF $(DEPDIR)/clanbomber-Bomber.Tpo -c -o clanbomber-Bomber.o `test -f 'Bomber.cpp' || echo '$(srcdir)/'`Bomber.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Bomber.Tpo $(DEPDIR)/clanbomber-Bomber.Po
#	$(AM_V_CXX)source='Bomber.cpp' object='clanbomber-Bomber.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Bomber.o `test -f 'Bomber.cpp' || echo '$(srcdir)/'`Bomber.cpp

clanbomber-Bomber.obj: Bomber.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Bomber.obj -MD -MP -MF $(DEPDIR)/clanbomber-Bomber.Tpo -c -o clanbomber-Bomber.obj `if test -f 'Bomber.cpp'; then $(CYGPATH_W) 'Bomber.cpp'; else $(CYGPATH_W) '$(srcdir)/Bomber.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Bomber.Tpo $(DEPDIR)/clanbomber-Bomber.Po
#	$(AM_V_CXX)source='Bomber.cpp' object='clanbomber-Bomber.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Bomber.obj `if test -f 'Bomber.cpp'; then $(CYGPATH_W) 'Bomber.cpp'; else $(CYGPATH_W) '$(srcdir)/Bomber.cpp'; fi`

clanbomber-Bomber_Corpse.o: Bomber_Corpse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Bomber_Corpse.o -MD -MP -MF $(DEPDIR)/clanbomber-Bomber_Corpse.Tpo -c -o clanbomber-Bomber_Corpse.o `test -f 'Bomber_Corpse.cpp' || echo '$(srcdir)/'`Bomber_Corpse.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Bomber_Corpse.Tpo $(DEPDIR)/clanbomber-Bomber_Corpse.Po
#	$(AM_V_CXX)source='Bomber_Corpse.cpp' object='clanbomber-Bomber_Corpse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Bomber_Corpse.o `test -f 'Bomber_Corpse.cpp' || echo '$(srcdir)/'`Bomber_Corpse.cpp

clanbomber-Bomber_Corpse.obj: Bomber_Corpse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Bomber_Corpse.obj -MD -MP -MF $(DEPDIR)/clanbomber-Bomber_Corpse.Tpo -c -o clanbomber-Bomber_Corpse.obj `if test -f 'Bomber_Corpse.cpp'; then $(CYGPATH_W) 'Bomber_Corpse.cpp'; else $(CYGPATH_W) '$(srcdir)/Bomber_Corpse.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Bomber_Corpse.Tpo $(DEPDIR)/clanbomber-Bomber_Corpse.Po
#	$(AM_V_CXX)source='Bomber_Corpse.cpp' object='clanbomber-Bomber_Corpse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Bomber_Corpse.obj `if test -f 'Bomber_Corpse.cpp'; then $(CYGPATH_W) 'Bomber_Corpse.cpp'; else $(CYGPATH_W) '$(srcdir)/Bomber_Corpse.cpp'; fi`

clanbomber-Chat.o: Chat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Chat.o -MD -MP -MF $(DEPDIR)/clanbomber-Chat.Tpo -c -o clanbomber-Chat.o `test -f 'Chat.cpp' || echo '$(srcdir)/'`Chat.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Chat.Tpo $(DEPDIR)/clanbomber-Chat.Po
#	$(AM_V_CXX)source='Chat.cpp' object='clanbomber-Chat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Chat.o `test -f 'Chat.cpp' || echo '$(srcdir)/'`Chat.cpp

clanbomber-Chat.obj: Chat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Chat.obj -MD -MP -MF $(DEPDIR)/clanbomber-Chat.Tpo -c -o clanbomber-Chat.obj `if test -f 'Chat.cpp'; then $(CYGPATH_W) 'Chat.cpp'; else $(CYGPATH_W) '$(srcdir)/Chat.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Chat.Tpo $(DEPDIR)/clanbomber-Chat.Po
#	$(AM_V_CXX)source='Chat.cpp' object='clanbomber-Chat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Chat.obj `if test -f 'Chat.cpp'; then $(CYGPATH_W) 'Chat.cpp'; else $(CYGPATH_W) '$(srcdir)/Chat.cpp'; fi`

clanbomber-ClanBomber.o: ClanBomber.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-ClanBomber.o -MD -MP -MF $(DEPDIR)/clanbomber-ClanBomber.Tpo -c -o clanbomber-ClanBomber.o `test -f 'ClanBomber.cpp' || echo '$(srcdir)/'`ClanBomber.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-ClanBomber.Tpo $(DEPDIR)/clanbomber-ClanBomber.Po
#	$(AM_V_CXX)source='ClanBomber.cpp' object='clanbomber-ClanBomber.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-ClanBomber.o `test -f 'ClanBomber.cpp' || echo '$(srcdir)/'`ClanBomber.cpp

clanbomber-ClanBomber.obj: ClanBomber.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-ClanBomber.obj -MD -MP -MF $(DEPDIR)/clanbomber-ClanBomber.Tpo -c -o clanbomber-ClanBomber.obj `if test -f 'ClanBomber.cpp'; then $(CYGPATH_W) 'ClanBomber.cpp'; else $(CYGPATH_W) '$(srcdir)/ClanBomber.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-ClanBomber.Tpo $(DEPDIR)/clanbomber-ClanBomber.Po
#	$(AM_V_CXX)source='ClanBomber.cpp' object='clanbomber-ClanBomber.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-ClanBomber.obj `if test -f 'ClanBomber.cpp'; then $(CYGPATH_W) 'ClanBomber.cpp'; else $(CYGPATH_W) '$(srcdir)/ClanBomber.cpp'; fi`

clanbomber-Client.o: Client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Client.o -MD -MP -MF $(DEPDIR)/clanbomber-Client.Tpo -c -o clanbomber-Client.o `test -f 'Client.cpp' || echo '$(srcdir)/'`Client.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Client.Tpo $(DEPDIR)/clanbomber-Client.Po
#	$(AM_V_CXX)source='Client.cpp' object='clanbomber-Client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Client.o `test -f 'Client.cpp' || echo '$(srcdir)/'`Client.cpp

clanbomber-Client.obj: Client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Client.obj -MD -MP -MF $(DEPDIR)/clanbomber-Client.Tpo -c -o clanbomber-Client.obj `if test -f 'Client.cpp'; then $(CYGPATH_W) 'Client.cpp'; else $(CYGPATH_W) '$(srcdir)/Client.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Client.Tpo $(DEPDIR)/clanbomber-Client.Po
#	$(AM_V_CXX)source='Client.cpp' object='clanbomber-Client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Client.obj `if test -f 'Client.cpp'; then $(CYGPATH_W) 'Client.cpp'; else $(CYGPATH_W) '$(srcdir)/Client.cpp'; fi`

clanbomber-ClientSetup.o: ClientSetup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-ClientSetup.o -MD -MP -MF $(DEPDIR)/clanbomber-ClientSetup.Tpo -c -o clanbomber-ClientSetup.o `test -f 'ClientSetup.cpp' || echo '$(srcdir)/'`ClientSetup.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-ClientSetup.Tpo $(DEPDIR)/clanbomber-ClientSetup.Po
#	$(AM_V_CXX)source='ClientSetup.cpp' object='clanbomber-ClientSetup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-ClientSetup.o `test -f 'ClientSetup.cpp' || echo '$(srcdir)/'`ClientSetup.cpp

clanbomber-ClientSetup.obj: ClientSetup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-ClientSetup.obj -MD -MP -MF $(DEPDIR)/clanbomber-ClientSetup.Tpo -c -o clanbomber-ClientSetup.obj `if test -f 'ClientSetup.cpp'; then $(CYGPATH_W) 'ClientSetup.cpp'; else $(CYGPATH_W) '$(srcdir)/ClientSetup.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-ClientSetup.Tpo $(DEPDIR)/clanbomber-ClientSetup.Po
#	$(AM_V_CXX)source='ClientSetup.cpp' object='clanbomber-ClientSetup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-ClientSetup.obj `if test -f 'ClientSetup.cpp'; then $(CYGPATH_W) 'ClientSetup.cpp'; else $(CYGPATH_W) '$(srcdir)/ClientSetup.cpp'; fi`

clanbomber-GameConfig.o: GameConfig.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-GameConfig.o -MD -MP -MF $(DEPDIR)/clanbomber-GameConfig.Tpo -c -o clanbomber-GameConfig.o `test -f 'GameConfig.cpp' || echo '$(srcdir)/'`GameConfig.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-GameConfig.Tpo $(DEPDIR)/clanbomber-GameConfig.Po
#	$(AM_V_CXX)source='GameConfig.cpp' object='clanbomber-GameConfig.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-GameConfig.o `test -f 'GameConfig.cpp' || echo '$(srcdir)/'`GameConfig.cpp

clanbomber-GameConfig.obj: GameConfig.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-GameConfig.obj -MD -MP -MF $(DEPDIR)/clanbomber-GameConfig.Tpo -c -o clanbomber-GameConfig.obj `if test -f 'GameConfig.cpp'; then $(CYGPATH_W) 'GameConfig.cpp'; else $(CYGPATH_W) '$(srcdir)/GameConfig.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-GameConfig.Tpo $(DEPDIR)/clanbomber-GameConfig.Po
#	$(AM_V_CXX)source='GameConfig.cpp' object='clanbomber-GameConfig.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-GameConfig.obj `if test -f 'GameConfig.cpp'; then $(CYGPATH_W) 'GameConfig.cpp'; else $(CYGPATH_W) '$(srcdir)/GameConfig.cpp'; fi`

clanbomber-Controller.o: Controller.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Controller.o -MD -MP -MF $(DEPDIR)/clanbomber-Controller.Tpo -c -o clanbomber-Controller.o `test -f 'Controller.cpp' || echo '$(srcdir)/'`Controller.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Controller.Tpo $(DEPDIR)/clanbomber-Controller.Po
#	$(AM_V_CXX)source='Controller.cpp' object='clanbomber-Controller.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Controller.o `test -f 'Controller.cpp' || echo '$(srcdir)/'`Controller.cpp

clanbomber-Controller.obj: Controller.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Controller.obj -MD -MP -MF $(DEPDIR)/clanbomber-Controller.Tpo -c -o clanbomber-Controller.obj `if test -f 'Controller.cpp'; then $(CYGPATH_W) 'Controller.cpp'; else $(CYGPATH_W) '$(srcdir)/Controller.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Controller.Tpo $(DEPDIR)/clanbomber-Controller.Po
#	$(AM_V_CXX)source='Controller.cpp' object='clanbomber-Controller.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Controller.obj `if test -f 'Controller.cpp'; then $(CYGPATH_W) 'Controller.cpp'; else $(CYGPATH_W) '$(srcdir)/Controller.cpp'; fi`

clanbomber-Controller_AI.o: Controller_AI.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Controller_AI.o -MD -MP -MF $(DEPDIR)/clanbomber-Controller_AI.Tpo -c -o clanbomber-Controller_AI.o `test -f 'Controller_AI.cpp' || echo '$(srcdir)/'`Controller_AI.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Controller_AI.Tpo $(DEPDIR)/clanbomber-Controller_AI.Po
#	$(AM_V_CXX)source='Controller_AI.cpp' object='clanbomber-Controller_AI.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Controller_AI.o `test -f 'Controller_AI.cpp' || echo '$(srcdir)/'`Controller_AI.cpp

clanbomber-Controller_AI.obj: Controller_AI.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Controller_AI.obj -MD -MP -MF $(DEPDIR)/clanbomber-Controller_AI.Tpo -c -o clanbomber-Controller_AI.obj `if test -f 'Controller_AI.cpp'; then $(CYGPATH_W) 'Controller_AI.cpp'; else $(CYGPATH_W) '$(srcdir)/Controller_AI.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Controller_AI.Tpo $(DEPDIR)/clanbomber-Controller_AI.Po
#	$(AM_V_CXX)source='Controller_AI.cpp' object='clanbomber-Controller_AI.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Controller_AI.obj `if test -f 'Controller_AI.cpp'; then $(CYGPATH_W) 'Controller_AI.cpp'; else $(CYGPATH_W) '$(srcdir)/Controller_AI.cpp'; fi`

clanbomber-Controller_AI_mass.o: Controller_AI_mass.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Controller_AI_mass.o -MD -MP -MF $(DEPDIR)/clanbomber-Controller_AI_mass.Tpo -c -o clanbomber-Controller_AI_mass.o `test -f 'Controller_AI_mass.cpp' || echo '$(srcdir)/'`Controller_AI_mass.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Controller_AI_mass.Tpo $(DEPDIR)/clanbomber-Controller_AI_mass.Po
#	$(AM_V_CXX)source='Controller_AI_mass.cpp' object='clanbomber-Controller_AI_mass.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Controller_AI_mass.o `test -f 'Controller_AI_mass.cpp' || echo '$(srcdir)/'`Controller_AI_mass.cpp

clanbomber-Controller_AI_mass.obj: Controller_AI_mass.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Controller_AI_mass.obj -MD -MP -MF $(DEPDIR)/clanbomber-Controller_AI_mass.Tpo -c -o clanbomber-Controller_AI_mass.obj `if test -f 'Controller_AI_mass.cpp'; then $(CYGPATH_W) 'Controller_AI_mass.cpp'; else $(CYGPATH_W) '$(srcdir)/Controller_AI_mass.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Controller_AI_mass.Tpo $(DEPDIR)/clanbomber-Controller_AI_mass.Po
#	$(AM_V_CXX)source='Controller_AI_mass.cpp' object='clanbomber-Controller_AI_mass.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Controller_AI_mass.obj `if test -f 'Controller_AI_mass.cpp'; then $(CYGPATH_W) 'Controller_AI_mass.cpp'; else $(CYGPATH_W) '$(srcdir)/Controller_AI_mass.cpp'; fi`

clanbomber-Controller_Joystick.o: Controller_Joystick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Controller_Joystick.o -MD -MP -MF $(DEPDIR)/clanbomber-Controller_Joystick.Tpo -c -o clanbomber-Controller_Joystick.o `test -f 'Controller_Joystick.cpp' || echo '$(srcdir)/'`Controller_Joystick.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Controller_Joystick.Tpo $(DEPDIR)/clanbomber-Controller_Joystick.Po
#	$(AM_V_CXX)source='Controller_Joystick.cpp' object='clanbomber-Controller_Joystick.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Controller_Joystick.o `test -f 'Controller_Joystick.cpp' || echo '$(srcdir)/'`Controller_Joystick.cpp

clanbomber-Controller_Joystick.obj: Controller_Joystick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Controller_Joystick.obj -MD -MP -MF $(DEPDIR)/clanbomber-Controller_Joystick.Tpo -c -o clanbomber-Controller_Joystick.obj `if test -f 'Controller_Joystick.cpp'; then $(CYGPATH_W) 'Controller_Joystick.cpp'; else $(CYGPATH_W) '$(srcdir)/Controller_Joystick.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Controller_Joystick.Tpo $(DEPDIR)/clanbomber-Controller_Joystick.Po
#	$(AM_V_CXX)source='Controller_Joystick.cpp' object='clanbomber-Controller_Joystick.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Controller_Joystick.obj `if test -f 'Controller_Joystick.cpp'; then $(CYGPATH_W) 'Controller_Joystick.cpp'; else $(CYGPATH_W) '$(srcdir)/Controller_Joystick.cpp'; fi`

clanbomber-Controller_RCMouse.o: Controller_RCMouse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Controller_RCMouse.o -MD -MP -MF $(DEPDIR)/clanbomber-Controller_RCMouse.Tpo -c -o clanbomber-Controller_RCMouse.o `test -f 'Controller_RCMouse.cpp' || echo '$(srcdir)/'`Controller_RCMouse.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Controller_RCMouse.Tpo $(DEPDIR)/clanbomber-Controller_RCMouse.Po
#	$(AM_V_CXX)source='Controller_RCMouse.cpp' object='clanbomber-Controller_RCMouse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Controller_RCMouse.o `test -f 'Controller_RCMouse.cpp' || echo '$(srcdir)/'`Controller_RCMouse.cpp

clanbomber-Controller_RCMouse.obj: Controller_RCMouse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Controller_RCMouse.obj -MD -MP -MF $(DEPDIR)/clanbomber-Controller_RCMouse.Tpo -c -o clanbomber-Controller_RCMouse.obj `if test -f 'Controller_RCMouse.cpp'; then $(CYGPATH_W) 'Controller_RCMouse.cpp'; else $(CYGPATH_W) '$(srcdir)/Controller_RCMouse.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Controller_RCMouse.Tpo $(DEPDIR)/clanbomber-Controller_RCMouse.Po
#	$(AM_V_CXX)source='Controller_RCMouse.cpp' object='clanbomber-Controller_RCMouse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Controller_RCMouse.obj `if test -f 'Controller_RCMouse.cpp'; then $(CYGPATH_W) 'Controller_RCMouse.cpp'; else $(CYGPATH_W) '$(srcdir)/Controller_RCMouse.cpp'; fi`

clanbomber-Controller_Keyboard.o: Controller_Keyboard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Controller_Keyboard.o -MD -MP -MF $(DEPDIR)/clanbomber-Controller_Keyboard.Tpo -c -o clanbomber-Controller_Keyboard.o `test -f 'Controller_Keyboard.cpp' || echo '$(srcdir)/'`Controller_Keyboard.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Controller_Keyboard.Tpo $(DEPDIR)/clanbomber-Controller_Keyboard.Po
#	$(AM_V_CXX)source='Controller_Keyboard.cpp' object='clanbomber-Controller_Keyboard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Controller_Keyboard.o `test -f 'Controller_Keyboard.cpp' || echo '$(srcdir)/'`Controller_Keyboard.cpp

clanbomber-Controller_Keyboard.obj: Controller_Keyboard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Controller_Keyboard.obj -MD -MP -MF $(DEPDIR)/clanbomber-Controller_Keyboard.Tpo -c -o clanbomber-Controller_Keyboard.obj `if test -f 'Controller_Keyboard.cpp'; then $(CYGPATH_W) 'Controller_Keyboard.cpp'; else $(CYGPATH_W) '$(srcdir)/Controller_Keyboard.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Controller_Keyboard.Tpo $(DEPDIR)/clanbomber-Controller_Keyboard.Po
#	$(AM_V_CXX)source='Controller_Keyboard.cpp' object='clanbomber-Controller_Keyboard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Controller_Keyboard.obj `if test -f 'Controller_Keyboard.cpp'; then $(CYGPATH_W) 'Controller_Keyboard.cpp'; else $(CYGPATH_W) '$(srcdir)/Controller_Keyboard.cpp'; fi`

clanbomber-Corpse_Part.o: Corpse_Part.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Corpse_Part.o -MD -MP -MF $(DEPDIR)/clanbomber-Corpse_Part.Tpo -c -o clanbomber-Corpse_Part.o `test -f 'Corpse_Part.cpp' || echo '$(srcdir)/'`Corpse_Part.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Corpse_Part.Tpo $(DEPDIR)/clanbomber-Corpse_Part.Po
#	$(AM_V_CXX)source='Corpse_Part.cpp' object='clanbomber-Corpse_Part.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Corpse_Part.o `test -f 'Corpse_Part.cpp' || echo '$(srcdir)/'`Corpse_Part.cpp

clanbomber-Corpse_Part.obj: Corpse_Part.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Corpse_Part.obj -MD -MP -MF $(DEPDIR)/clanbomber-Corpse_Part.Tpo -c -o clanbomber-Corpse_Part.obj `if test -f 'Corpse_Part.cpp'; then $(CYGPATH_W) 'Corpse_Part.cpp'; else $(CYGPATH_W) '$(srcdir)/Corpse_Part.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Corpse_Part.Tpo $(DEPDIR)/clanbomber-Corpse_Part.Po
#	$(AM_V_CXX)source='Corpse_Part.cpp' object='clanbomber-Corpse_Part.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Corpse_Part.obj `if test -f 'Corpse_Part.cpp'; then $(CYGPATH_W) 'Corpse_Part.cpp'; else $(CYGPATH_W) '$(srcdir)/Corpse_Part.cpp'; fi`

clanbomber-Credits.o: Credits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Credits.o -MD -MP -MF $(DEPDIR)/clanbomber-Credits.Tpo -c -o clanbomber-Credits.o `test -f 'Credits.cpp' || echo '$(srcdir)/'`Credits.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Credits.Tpo $(DEPDIR)/clanbomber-Credits.Po
#	$(AM_V_CXX)source='Credits.cpp' object='clanbomber-Credits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Credits.o `test -f 'Credits.cpp' || echo '$(srcdir)/'`Credits.cpp

clanbomber-Credits.obj: Credits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Credits.obj -MD -MP -MF $(DEPDIR)/clanbomber-Credits.Tpo -c -o clanbomber-Credits.obj `if test -f 'Credits.cpp'; then $(CYGPATH_W) 'Credits.cpp'; else $(CYGPATH_W) '$(srcdir)/Credits.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Credits.Tpo $(DEPDIR)/clanbomber-Credits.Po
#	$(AM_V_CXX)source='Credits.cpp' object='clanbomber-Credits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Credits.obj `if test -f 'Credits.cpp'; then $(CYGPATH_W) 'Credits.cpp'; else $(CYGPATH_W) '$(srcdir)/Credits.cpp'; fi`

clanbomber-Disease.o: Disease.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Disease.o -MD -MP -MF $(DEPDIR)/clanbomber-Disease.Tpo -c -o clanbomber-Disease.o `test -f 'Disease.cpp' || echo '$(srcdir)/'`Disease.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Disease.Tpo $(DEPDIR)/clanbomber-Disease.Po
#	$(AM_V_CXX)source='Disease.cpp' object='clanbomber-Disease.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Disease.o `test -f 'Disease.cpp' || echo '$(srcdir)/'`Disease.cpp

clanbomber-Disease.obj: Disease.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Disease.obj -MD -MP -MF $(DEPDIR)/clanbomber-Disease.Tpo -c -o clanbomber-Disease.obj `if test -f 'Disease.cpp'; then $(CYGPATH_W) 'Disease.cpp'; else $(CYGPATH_W) '$(srcdir)/Disease.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Disease.Tpo $(DEPDIR)/clanbomber-Disease.Po
#	$(AM_V_CXX)source='Disease.cpp' object='clanbomber-Disease.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Disease.obj `if test -f 'Disease.cpp'; then $(CYGPATH_W) 'Disease.cpp'; else $(CYGPATH_W) '$(srcdir)/Disease.cpp'; fi`

clanbomber-Disease_Fast.o: Disease_Fast.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Disease_Fast.o -MD -MP -MF $(DEPDIR)/clanbomber-Disease_Fast.Tpo -c -o clanbomber-Disease_Fast.o `test -f 'Disease_Fast.cpp' || echo '$(srcdir)/'`Disease_Fast.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Disease_Fast.Tpo $(DEPDIR)/clanbomber-Disease_Fast.Po
#	$(AM_V_CXX)source='Disease_Fast.cpp' object='clanbomber-Disease_Fast.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Disease_Fast.o `test -f 'Disease_Fast.cpp' || echo '$(srcdir)/'`Disease_Fast.cpp

clanbomber-Disease_Fast.obj: Disease_Fast.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Disease_Fast.obj -MD -MP -MF $(DEPDIR)/clanbomber-Disease_Fast.Tpo -c -o clanbomber-Disease_Fast.obj `if test -f 'Disease_Fast.cpp'; then $(CYGPATH_W) 'Disease_Fast.cpp'; else $(CYGPATH_W) '$(srcdir)/Disease_Fast.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Disease_Fast.Tpo $(DEPDIR)/clanbomber-Disease_Fast.Po
#	$(AM_V_CXX)source='Disease_Fast.cpp' object='clanbomber-Disease_Fast.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Disease_Fast.obj `if test -f 'Disease_Fast.cpp'; then $(CYGPATH_W) 'Disease_Fast.cpp'; else $(CYGPATH_W) '$(srcdir)/Disease_Fast.cpp'; fi`

clanbomber-Disease_Frozen.o: Disease_Frozen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Disease_Frozen.o -MD -MP -MF $(DEPDIR)/clanbomber-Disease_Frozen.Tpo -c -o clanbomber-Disease_Frozen.o `test -f 'Disease_Frozen.cpp' || echo '$(srcdir)/'`Disease_Frozen.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Disease_Frozen.Tpo $(DEPDIR)/clanbomber-Disease_Frozen.Po
#	$(AM_V_CXX)source='Disease_Frozen.cpp' object='clanbomber-Disease_Frozen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Disease_Frozen.o `test -f 'Disease_Frozen.cpp' || echo '$(srcdir)/'`Disease_Frozen.cpp

clanbomber-Disease_Frozen.obj: Disease_Frozen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Disease_Frozen.obj -MD -MP -MF $(DEPDIR)/clanbomber-Disease_Frozen.Tpo -c -o clanbomber-Disease_Frozen.obj `if test -f 'Disease_Frozen.cpp'; then $(CYGPATH_W) 'Disease_Frozen.cpp'; else $(CYGPATH_W) '$(srcdir)/Disease_Frozen.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Disease_Frozen.Tpo $(DEPDIR)/clanbomber-Disease_Frozen.Po
#	$(AM_V_CXX)source='Disease_Frozen.cpp' object='clanbomber-Disease_Frozen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Disease_Frozen.obj `if test -f 'Disease_Frozen.cpp'; then $(CYGPATH_W) 'Disease_Frozen.cpp'; else $(CYGPATH_W) '$(srcdir)/Disease_Frozen.cpp'; fi`

clanbomber-Disease_PutBomb.o: Disease_PutBomb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Disease_PutBomb.o -MD -MP -MF $(DEPDIR)/clanbomber-Disease_PutBomb.Tpo -c -o clanbomber-Disease_PutBomb.o `test -f 'Disease_PutBomb.cpp' || echo '$(srcdir)/'`Disease_PutBomb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Disease_PutBomb.Tpo $(DEPDIR)/clanbomber-Disease_PutBomb.Po
#	$(AM_V_CXX)source='Disease_PutBomb.cpp' object='clanbomber-Disease_PutBomb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Disease_PutBomb.o `test -f 'Disease_PutBomb.cpp' || echo '$(srcdir)/'`Disease_PutBomb.cpp

clanbomber-Disease_PutBomb.obj: Disease_PutBomb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Disease_PutBomb.obj -MD -MP -MF $(DEPDIR)/clanbomber-Disease_PutBomb.Tpo -c -o clanbomber-Disease_PutBomb.obj `if test -f 'Disease_PutBomb.cpp'; then $(CYGPATH_W) 'Disease_PutBomb.cpp'; else $(CYGPATH_W) '$(srcdir)/Disease_PutBomb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Disease_PutBomb.Tpo $(DEPDIR)/clanbomber-Disease_PutBomb.Po
#	$(AM_V_CXX)source='Disease_PutBomb.cpp' object='clanbomber-Disease_PutBomb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Disease_PutBomb.obj `if test -f 'Disease_PutBomb.cpp'; then $(CYGPATH_W) 'Disease_PutBomb.cpp'; else $(CYGPATH_W) '$(srcdir)/Disease_PutBomb.cpp'; fi`

clanbomber-Disease_Stoned.o: Disease_Stoned.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Disease_Stoned.o -MD -MP -MF $(DEPDIR)/clanbomber-Disease_Stoned.Tpo -c -o clanbomber-Disease_Stoned.o `test -f 'Disease_Stoned.cpp' || echo '$(srcdir)/'`Disease_Stoned.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Disease_Stoned.Tpo $(DEPDIR)/clanbomber-Disease_Stoned.Po
#	$(AM_V_CXX)source='Disease_Stoned.cpp' object='clanbomber-Disease_Stoned.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Disease_Stoned.o `test -f 'Disease_Stoned.cpp' || echo '$(srcdir)/'`Disease_Stoned.cpp

clanbomber-Disease_Stoned.obj: Disease_Stoned.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Disease_Stoned.obj -MD -MP -MF $(DEPDIR)/clanbomber-Disease_Stoned.Tpo -c -o clanbomber-Disease_Stoned.obj `if test -f 'Disease_Stoned.cpp'; then $(CYGPATH_W) 'Disease_Stoned.cpp'; else $(CYGPATH_W) '$(srcdir)/Disease_Stoned.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Disease_Stoned.Tpo $(DEPDIR)/clanbomber-Disease_Stoned.Po
#	$(AM_V_CXX)source='Disease_Stoned.cpp' object='clanbomber-Disease_Stoned.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Disease_Stoned.obj `if test -f 'Disease_Stoned.cpp'; then $(CYGPATH_W) 'Disease_Stoned.cpp'; else $(CYGPATH_W) '$(srcdir)/Disease_Stoned.cpp'; fi`

clanbomber-Explosion.o: Explosion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Explosion.o -MD -MP -MF $(DEPDIR)/clanbomber-Explosion.Tpo -c -o clanbomber-Explosion.o `test -f 'Explosion.cpp' || echo '$(srcdir)/'`Explosion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Explosion.Tpo $(DEPDIR)/clanbomber-Explosion.Po
#	$(AM_V_CXX)source='Explosion.cpp' object='clanbomber-Explosion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Explosion.o `test -f 'Explosion.cpp' || echo '$(srcdir)/'`Explosion.cpp

clanbomber-Explosion.obj: Explosion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Explosion.obj -MD -MP -MF $(DEPDIR)/clanbomber-Explosion.Tpo -c -o clanbomber-Explosion.obj `if test -f 'Explosion.cpp'; then $(CYGPATH_W) 'Explosion.cpp'; else $(CYGPATH_W) '$(srcdir)/Explosion.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Explosion.Tpo $(DEPDIR)/clanbomber-Explosion.Po
#	$(AM_V_CXX)source='Explosion.cpp' object='clanbomber-Explosion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Explosion.obj `if test -f 'Explosion.cpp'; then $(CYGPATH_W) 'Explosion.cpp'; else $(CYGPATH_W) '$(srcdir)/Explosion.cpp'; fi`

clanbomber-Extra.o: Extra.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra.o -MD -MP -MF $(DEPDIR)/clanbomber-Extra.Tpo -c -o clanbomber-Extra.o `test -f 'Extra.cpp' || echo '$(srcdir)/'`Extra.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra.Tpo $(DEPDIR)/clanbomber-Extra.Po
#	$(AM_V_CXX)source='Extra.cpp' object='clanbomber-Extra.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra.o `test -f 'Extra.cpp' || echo '$(srcdir)/'`Extra.cpp

clanbomber-Extra.obj: Extra.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra.obj -MD -MP -MF $(DEPDIR)/clanbomber-Extra.Tpo -c -o clanbomber-Extra.obj `if test -f 'Extra.cpp'; then $(CYGPATH_W) 'Extra.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra.Tpo $(DEPDIR)/clanbomber-Extra.Po
#	$(AM_V_CXX)source='Extra.cpp' object='clanbomber-Extra.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra.obj `if test -f 'Extra.cpp'; then $(CYGPATH_W) 'Extra.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra.cpp'; fi`

clanbomber-Extra_Bomb.o: Extra_Bomb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Bomb.o -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Bomb.Tpo -c -o clanbomber-Extra_Bomb.o `test -f 'Extra_Bomb.cpp' || echo '$(srcdir)/'`Extra_Bomb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Bomb.Tpo $(DEPDIR)/clanbomber-Extra_Bomb.Po
#	$(AM_V_CXX)source='Extra_Bomb.cpp' object='clanbomber-Extra_Bomb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Bomb.o `test -f 'Extra_Bomb.cpp' || echo '$(srcdir)/'`Extra_Bomb.cpp

clanbomber-Extra_Bomb.obj: Extra_Bomb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Bomb.obj -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Bomb.Tpo -c -o clanbomber-Extra_Bomb.obj `if test -f 'Extra_Bomb.cpp'; then $(CYGPATH_W) 'Extra_Bomb.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Bomb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Bomb.Tpo $(DEPDIR)/clanbomber-Extra_Bomb.Po
#	$(AM_V_CXX)source='Extra_Bomb.cpp' object='clanbomber-Extra_Bomb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Bomb.obj `if test -f 'Extra_Bomb.cpp'; then $(CYGPATH_W) 'Extra_Bomb.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Bomb.cpp'; fi`

clanbomber-Extra_Glove.o: Extra_Glove.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Glove.o -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Glove.Tpo -c -o clanbomber-Extra_Glove.o `test -f 'Extra_Glove.cpp' || echo '$(srcdir)/'`Extra_Glove.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Glove.Tpo $(DEPDIR)/clanbomber-Extra_Glove.Po
#	$(AM_V_CXX)source='Extra_Glove.cpp' object='clanbomber-Extra_Glove.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Glove.o `test -f 'Extra_Glove.cpp' || echo '$(srcdir)/'`Extra_Glove.cpp

clanbomber-Extra_Glove.obj: Extra_Glove.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Glove.obj -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Glove.Tpo -c -o clanbomber-Extra_Glove.obj `if test -f 'Extra_Glove.cpp'; then $(CYGPATH_W) 'Extra_Glove.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Glove.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Glove.Tpo $(DEPDIR)/clanbomber-Extra_Glove.Po
#	$(AM_V_CXX)source='Extra_Glove.cpp' object='clanbomber-Extra_Glove.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Glove.obj `if test -f 'Extra_Glove.cpp'; then $(CYGPATH_W) 'Extra_Glove.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Glove.cpp'; fi`

clanbomber-Extra_Joint.o: Extra_Joint.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Joint.o -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Joint.Tpo -c -o clanbomber-Extra_Joint.o `test -f 'Extra_Joint.cpp' || echo '$(srcdir)/'`Extra_Joint.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Joint.Tpo $(DEPDIR)/clanbomber-Extra_Joint.Po
#	$(AM_V_CXX)source='Extra_Joint.cpp' object='clanbomber-Extra_Joint.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Joint.o `test -f 'Extra_Joint.cpp' || echo '$(srcdir)/'`Extra_Joint.cpp

clanbomber-Extra_Joint.obj: Extra_Joint.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Joint.obj -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Joint.Tpo -c -o clanbomber-Extra_Joint.obj `if test -f 'Extra_Joint.cpp'; then $(CYGPATH_W) 'Extra_Joint.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Joint.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Joint.Tpo $(DEPDIR)/clanbomber-Extra_Joint.Po
#	$(AM_V_CXX)source='Extra_Joint.cpp' object='clanbomber-Extra_Joint.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Joint.obj `if test -f 'Extra_Joint.cpp'; then $(CYGPATH_W) 'Extra_Joint.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Joint.cpp'; fi`

clanbomber-Extra_Kick.o: Extra_Kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Kick.o -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Kick.Tpo -c -o clanbomber-Extra_Kick.o `test -f 'Extra_Kick.cpp' || echo '$(srcdir)/'`Extra_Kick.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Kick.Tpo $(DEPDIR)/clanbomber-Extra_Kick.Po
#	$(AM_V_CXX)source='Extra_Kick.cpp' object='clanbomber-Extra_Kick.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Kick.o `test -f 'Extra_Kick.cpp' || echo '$(srcdir)/'`Extra_Kick.cpp

clanbomber-Extra_Kick.obj: Extra_Kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Kick.obj -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Kick.Tpo -c -o clanbomber-Extra_Kick.obj `if test -f 'Extra_Kick.cpp'; then $(CYGPATH_W) 'Extra_Kick.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Kick.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Kick.Tpo $(DEPDIR)/clanbomber-Extra_Kick.Po
#	$(AM_V_CXX)source='Extra_Kick.cpp' object='clanbomber-Extra_Kick.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Kick.obj `if test -f 'Extra_Kick.cpp'; then $(CYGPATH_W) 'Extra_Kick.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Kick.cpp'; fi`

clanbomber-Extra_Koks.o: Extra_Koks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Koks.o -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Koks.Tpo -c -o clanbomber-Extra_Koks.o `test -f 'Extra_Koks.cpp' || echo '$(srcdir)/'`Extra_Koks.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Koks.Tpo $(DEPDIR)/clanbomber-Extra_Koks.Po
#	$(AM_V_CXX)source='Extra_Koks.cpp' object='clanbomber-Extra_Koks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Koks.o `test -f 'Extra_Koks.cpp' || echo '$(srcdir)/'`Extra_Koks.cpp

clanbomber-Extra_Koks.obj: Extra_Koks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Koks.obj -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Koks.Tpo -c -o clanbomber-Extra_Koks.obj `if test -f 'Extra_Koks.cpp'; then $(CYGPATH_W) 'Extra_Koks.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Koks.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Koks.Tpo $(DEPDIR)/clanbomber-Extra_Koks.Po
#	$(AM_V_CXX)source='Extra_Koks.cpp' object='clanbomber-Extra_Koks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Koks.obj `if test -f 'Extra_Koks.cpp'; then $(CYGPATH_W) 'Extra_Koks.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Koks.cpp'; fi`

clanbomber-Extra_Power.o: Extra_Power.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Power.o -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Power.Tpo -c -o clanbomber-Extra_Power.o `test -f 'Extra_Power.cpp' || echo '$(srcdir)/'`Extra_Power.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Power.Tpo $(DEPDIR)/clanbomber-Extra_Power.Po
#	$(AM_V_CXX)source='Extra_Power.cpp' object='clanbomber-Extra_Power.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Power.o `test -f 'Extra_Power.cpp' || echo '$(srcdir)/'`Extra_Power.cpp

clanbomber-Extra_Power.obj: Extra_Power.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Power.obj -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Power.Tpo -c -o clanbomber-Extra_Power.obj `if test -f 'Extra_Power.cpp'; then $(CYGPATH_W) 'Extra_Power.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Power.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Power.Tpo $(DEPDIR)/clanbomber-Extra_Power.Po
#	$(AM_V_CXX)source='Extra_Power.cpp' object='clanbomber-Extra_Power.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Power.obj `if test -f 'Extra_Power.cpp'; then $(CYGPATH_W) 'Extra_Power.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Power.cpp'; fi`

clanbomber-Extra_Skateboard.o: Extra_Skateboard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Skateboard.o -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Skateboard.Tpo -c -o clanbomber-Extra_Skateboard.o `test -f 'Extra_Skateboard.cpp' || echo '$(srcdir)/'`Extra_Skateboard.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Skateboard.Tpo $(DEPDIR)/clanbomber-Extra_Skateboard.Po
#	$(AM_V_CXX)source='Extra_Skateboard.cpp' object='clanbomber-Extra_Skateboard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Skateboard.o `test -f 'Extra_Skateboard.cpp' || echo '$(srcdir)/'`Extra_Skateboard.cpp

clanbomber-Extra_Skateboard.obj: Extra_Skateboard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Skateboard.obj -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Skateboard.Tpo -c -o clanbomber-Extra_Skateboard.obj `if test -f 'Extra_Skateboard.cpp'; then $(CYGPATH_W) 'Extra_Skateboard.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Skateboard.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Skateboard.Tpo $(DEPDIR)/clanbomber-Extra_Skateboard.Po
#	$(AM_V_CXX)source='Extra_Skateboard.cpp' object='clanbomber-Extra_Skateboard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Skateboard.obj `if test -f 'Extra_Skateboard.cpp'; then $(CYGPATH_W) 'Extra_Skateboard.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Skateboard.cpp'; fi`

clanbomber-Extra_Viagra.o: Extra_Viagra.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Viagra.o -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Viagra.Tpo -c -o clanbomber-Extra_Viagra.o `test -f 'Extra_Viagra.cpp' || echo '$(srcdir)/'`Extra_Viagra.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Viagra.Tpo $(DEPDIR)/clanbomber-Extra_Viagra.Po
#	$(AM_V_CXX)source='Extra_Viagra.cpp' object='clanbomber-Extra_Viagra.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Viagra.o `test -f 'Extra_Viagra.cpp' || echo '$(srcdir)/'`Extra_Viagra.cpp

clanbomber-Extra_Viagra.obj: Extra_Viagra.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Viagra.obj -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Viagra.Tpo -c -o clanbomber-Extra_Viagra.obj `if test -f 'Extra_Viagra.cpp'; then $(CYGPATH_W) 'Extra_Viagra.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Viagra.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Viagra.Tpo $(DEPDIR)/clanbomber-Extra_Viagra.Po
#	$(AM_V_CXX)source='Extra_Viagra.cpp' object='clanbomber-Extra_Viagra.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Viagra.obj `if test -f 'Extra_Viagra.cpp'; then $(CYGPATH_W) 'Extra_Viagra.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Viagra.cpp'; fi`

clanbomber-Event.o: Event.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Event.o -MD -MP -MF $(DEPDIR)/clanbomber-Event.Tpo -c -o clanbomber-Event.o `test -f 'Event.cpp' || echo '$(srcdir)/'`Event.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Event.Tpo $(DEPDIR)/clanbomber-Event.Po
#	$(AM_V_CXX)source='Event.cpp' object='clanbomber-Event.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Event.o `test -f 'Event.cpp' || echo '$(srcdir)/'`Event.cpp

clanbomber-Event.obj: Event.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Event.obj -MD -MP -MF $(DEPDIR)/clanbomber-Event.Tpo -c -o clanbomber-Event.obj `if test -f 'Event.cpp'; then $(CYGPATH_W) 'Event.cpp'; else $(CYGPATH_W) '$(srcdir)/Event.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Event.Tpo $(DEPDIR)/clanbomber-Event.Po
#	$(AM_V_CXX)source='Event.cpp' object='clanbomber-Event.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Event.obj `if test -f 'Event.cpp'; then $(CYGPATH_W) 'Event.cpp'; else $(CYGPATH_W) '$(srcdir)/Event.cpp'; fi`

clanbomber-GameObject.o: GameObject.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-GameObject.o -MD -MP -MF $(DEPDIR)/clanbomber-GameObject.Tpo -c -o clanbomber-GameObject.o `test -f 'GameObject.cpp' || echo '$(srcdir)/'`GameObject.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-GameObject.Tpo $(DEPDIR)/clanbomber-GameObject.Po
#	$(AM_V_CXX)source='GameObject.cpp' object='clanbomber-GameObject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-GameObject.o `test -f 'GameObject.cpp' || echo '$(srcdir)/'`GameObject.cpp

clanbomber-GameObject.obj: GameObject.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-GameObject.obj -MD -MP -MF $(DEPDIR)/clanbomber-GameObject.Tpo -c -o clanbomber-GameObject.obj `if test -f 'GameObject.cpp'; then $(CYGPATH_W) 'GameObject.cpp'; else $(CYGPATH_W) '$(srcdir)/GameObject.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-GameObject.Tpo $(DEPDIR)/clanbomber-GameObject.Po
#	$(AM_V_CXX)source='GameObject.cpp' object='clanbomber-GameObject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-GameObject.obj `if test -f 'GameObject.cpp'; then $(CYGPATH_W) 'GameObject.cpp'; else $(CYGPATH_W) '$(srcdir)/GameObject.cpp'; fi`

clanbomber-GameStatus.o: GameStatus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-GameStatus.o -MD -MP -MF $(DEPDIR)/clanbomber-GameStatus.Tpo -c -o clanbomber-GameStatus.o `test -f 'GameStatus.cpp' || echo '$(srcdir)/'`GameStatus.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-GameStatus.Tpo $(DEPDIR)/clanbomber-GameStatus.Po
#	$(AM_V_CXX)source='GameStatus.cpp' object='clanbomber-GameStatus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-GameStatus.o `test -f 'GameStatus.cpp' || echo '$(srcdir)/'`GameStatus.cpp

clanbomber-GameStatus.obj: GameStatus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-GameStatus.obj -MD -MP -MF $(DEPDIR)/clanbomber-GameStatus.Tpo -c -o clanbomber-GameStatus.obj `if test -f 'GameStatus.cpp'; then $(CYGPATH_W) 'GameStatus.cpp'; else $(CYGPATH_W) '$(srcdir)/GameStatus.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-GameStatus.Tpo $(DEPDIR)/clanbomber-GameStatus.Po
#	$(AM_V_CXX)source='GameStatus.cpp' object='clanbomber-GameStatus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-GameStatus.obj `if test -f 'GameStatus.cpp'; then $(CYGPATH_W) 'GameStatus.cpp'; else $(CYGPATH_W) '$(srcdir)/GameStatus.cpp'; fi`

clanbomber-GameStatus_Team.o: GameStatus_Team.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-GameStatus_Team.o -MD -MP -MF $(DEPDIR)/clanbomber-GameStatus_Team.Tpo -c -o clanbomber-GameStatus_Team.o `test -f 'GameStatus_Team.cpp' || echo '$(srcdir)/'`GameStatus_Team.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-GameStatus_Team.Tpo $(DEPDIR)/clanbomber-GameStatus_Team.Po
#	$(AM_V_CXX)source='GameStatus_Team.cpp' object='clanbomber-GameStatus_Team.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-GameStatus_Team.o `test -f 'GameStatus_Team.cpp' || echo '$(srcdir)/'`GameStatus_Team.cpp

clanbomber-GameStatus_Team.obj: GameStatus_Team.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-GameStatus_Team.obj -MD -MP -MF $(DEPDIR)/clanbomber-GameStatus_Team.Tpo -c -o clanbomber-GameStatus_Team.obj `if test -f 'GameStatus_Team.cpp'; then $(CYGPATH_W) 'GameStatus_Team.cpp'; else $(CYGPATH_W) '$(srcdir)/GameStatus_Team.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-GameStatus_Team.Tpo $(DEPDIR)/clanbomber-GameStatus_Team.Po
#	$(AM_V_CXX)source='GameStatus_Team.cpp' object='clanbomber-GameStatus_Team.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-GameStatus_Team.obj `if test -f 'GameStatus_Team.cpp'; then $(CYGPATH_W) 'GameStatus_Team.cpp'; else $(CYGPATH_W) '$(srcdir)/GameStatus_Team.cpp'; fi`

clanbomber-Map.o: Map.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Map.o -MD -MP -MF $(DEPDIR)/clanbomber-Map.Tpo -c -o clanbomber-Map.o `test -f 'Map.cpp' || echo '$(srcdir)/'`Map.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Map.Tpo $(DEPDIR)/clanbomber-Map.Po
#	$(AM_V_CXX)source='Map.cpp' object='clanbomber-Map.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Map.o `test -f 'Map.cpp' || echo '$(srcdir)/'`Map.cpp

clanbomber-Map.obj: Map.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Map.obj -MD -MP -MF $(DEPDIR)/clanbomber-Map.Tpo -c -o clanbomber-Map.obj `if test -f 'Map.cpp'; then $(CYGPATH_W) 'Map.cpp'; else $(CYGPATH_W) '$(srcdir)/Map.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Map.Tpo $(DEPDIR)/clanbomber-Map.Po
#	$(AM_V_CXX)source='Map.cpp' object='clanbomber-Map.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Map.obj `if test -f 'Map.cpp'; then $(CYGPATH_W) 'Map.cpp'; else $(CYGPATH_W) '$(srcdir)/Map.cpp'; fi`

clanbomber-MapEditor.o: MapEditor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapEditor.o -MD -MP -MF $(DEPDIR)/clanbomber-MapEditor.Tpo -c -o clanbomber-MapEditor.o `test -f 'MapEditor.cpp' || echo '$(srcdir)/'`MapEditor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapEditor.Tpo $(DEPDIR)/clanbomber-MapEditor.Po
#	$(AM_V_CXX)source='MapEditor.cpp' object='clanbomber-MapEditor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapEditor.o `test -f 'MapEditor.cpp' || echo '$(srcdir)/'`MapEditor.cpp

clanbomber-MapEditor.obj: MapEditor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapEditor.obj -MD -MP -MF $(DEPDIR)/clanbomber-MapEditor.Tpo -c -o clanbomber-MapEditor.obj `if test -f 'MapEditor.cpp'; then $(CYGPATH_W) 'MapEditor.cpp'; else $(CYGPATH_W) '$(srcdir)/MapEditor.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapEditor.Tpo $(DEPDIR)/clanbomber-MapEditor.Po
#	$(AM_V_CXX)source='MapEditor.cpp' object='clanbomber-MapEditor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapEditor.obj `if test -f 'MapEditor.cpp'; then $(CYGPATH_W) 'MapEditor.cpp'; else $(CYGPATH_W) '$(srcdir)/MapEditor.cpp'; fi`

clanbomber-MapEntry.o: MapEntry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapEntry.o -MD -MP -MF $(DEPDIR)/clanbomber-MapEntry.Tpo -c -o clanbomber-MapEntry.o `test -f 'MapEntry.cpp' || echo '$(srcdir)/'`MapEntry.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapEntry.Tpo $(DEPDIR)/clanbomber-MapEntry.Po
#	$(AM_V_CXX)source='MapEntry.cpp' object='clanbomber-MapEntry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapEntry.o `test -f 'MapEntry.cpp' || echo '$(srcdir)/'`MapEntry.cpp

clanbomber-MapEntry.obj: MapEntry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapEntry.obj -MD -MP -MF $(DEPDIR)/clanbomber-MapEntry.Tpo -c -o clanbomber-MapEntry.obj `if test -f 'MapEntry.cpp'; then $(CYGPATH_W) 'MapEntry.cpp'; else $(CYGPATH_W) '$(srcdir)/MapEntry.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapEntry.Tpo $(DEPDIR)/clanbomber-MapEntry.Po
#	$(AM_V_CXX)source='MapEntry.cpp' object='clanbomber-MapEntry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapEntry.obj `if test -f 'MapEntry.cpp'; then $(CYGPATH_W) 'MapEntry.cpp'; else $(CYGPATH_W) '$(srcdir)/MapEntry.cpp'; fi`

clanbomber-MapSelector.o: MapSelector.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapSelector.o -MD -MP -MF $(DEPDIR)/clanbomber-MapSelector.Tpo -c -o clanbomber-MapSelector.o `test -f 'MapSelector.cpp' || echo '$(srcdir)/'`MapSelector.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapSelector.Tpo $(DEPDIR)/clanbomber-MapSelector.Po
#	$(AM_V_CXX)source='MapSelector.cpp' object='clanbomber-MapSelector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapSelector.o `test -f 'MapSelector.cpp' || echo '$(srcdir)/'`MapSelector.cpp

clanbomber-MapSelector.obj: MapSelector.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapSelector.obj -MD -MP -MF $(DEPDIR)/clanbomber-MapSelector.Tpo -c -o clanbomber-MapSelector.obj `if test -f 'MapSelector.cpp'; then $(CYGPATH_W) 'MapSelector.cpp'; else $(CYGPATH_W) '$(srcdir)/MapSelector.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapSelector.Tpo $(DEPDIR)/clanbomber-MapSelector.Po
#	$(AM_V_CXX)source='MapSelector.cpp' object='clanbomber-MapSelector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapSelector.obj `if test -f 'MapSelector.cpp'; then $(CYGPATH_W) 'MapSelector.cpp'; else $(CYGPATH_W) '$(srcdir)/MapSelector.cpp'; fi`

clanbomber-MapTile.o: MapTile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapTile.o -MD -MP -MF $(DEPDIR)/clanbomber-MapTile.Tpo -c -o clanbomber-MapTile.o `test -f 'MapTile.cpp' || echo '$(srcdir)/'`MapTile.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapTile.Tpo $(DEPDIR)/clanbomber-MapTile.Po
#	$(AM_V_CXX)source='MapTile.cpp' object='clanbomber-MapTile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapTile.o `test -f 'MapTile.cpp' || echo '$(srcdir)/'`MapTile.cpp

clanbomber-MapTile.obj: MapTile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapTile.obj -MD -MP -MF $(DEPDIR)/clanbomber-MapTile.Tpo -c -o clanbomber-MapTile.obj `if test -f 'MapTile.cpp'; then $(CYGPATH_W) 'MapTile.cpp'; else $(CYGPATH_W) '$(srcdir)/MapTile.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapTile.Tpo $(DEPDIR)/clanbomber-MapTile.Po
#	$(AM_V_CXX)source='MapTile.cpp' object='clanbomber-MapTile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapTile.obj `if test -f 'MapTile.cpp'; then $(CYGPATH_W) 'MapTile.cpp'; else $(CYGPATH_W) '$(srcdir)/MapTile.cpp'; fi`

clanbomber-MapTile_Arrow.o: MapTile_Arrow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapTile_Arrow.o -MD -MP -MF $(DEPDIR)/clanbomber-MapTile_Arrow.Tpo -c -o clanbomber-MapTile_Arrow.o `test -f 'MapTile_Arrow.cpp' || echo '$(srcdir)/'`MapTile_Arrow.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapTile_Arrow.Tpo $(DEPDIR)/clanbomber-MapTile_Arrow.Po
#	$(AM_V_CXX)source='MapTile_Arrow.cpp' object='clanbomber-MapTile_Arrow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapTile_Arrow.o `test -f 'MapTile_Arrow.cpp' || echo '$(srcdir)/'`MapTile_Arrow.cpp

clanbomber-MapTile_Arrow.obj: MapTile_Arrow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapTile_Arrow.obj -MD -MP -MF $(DEPDIR)/clanbomber-MapTile_Arrow.Tpo -c -o clanbomber-MapTile_Arrow.obj `if test -f 'MapTile_Arrow.cpp'; then $(CYGPATH_W) 'MapTile_Arrow.cpp'; else $(CYGPATH_W) '$(srcdir)/MapTile_Arrow.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapTile_Arrow.Tpo $(DEPDIR)/clanbomber-MapTile_Arrow.Po
#	$(AM_V_CXX)source='MapTile_Arrow.cpp' object='clanbomber-MapTile_Arrow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapTile_Arrow.obj `if test -f 'MapTile_Arrow.cpp'; then $(CYGPATH_W) 'MapTile_Arrow.cpp'; else $(CYGPATH_W) '$(srcdir)/MapTile_Arrow.cpp'; fi`

clanbomber-MapTile_Box.o: MapTile_Box.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapTile_Box.o -MD -MP -MF $(DEPDIR)/clanbomber-MapTile_Box.Tpo -c -o clanbomber-MapTile_Box.o `test -f 'MapTile_Box.cpp' || echo '$(srcdir)/'`MapTile_Box.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapTile_Box.Tpo $(DEPDIR)/clanbomber-MapTile_Box.Po
#	$(AM_V_CXX)source='MapTile_Box.cpp' object='clanbomber-MapTile_Box.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapTile_Box.o `test -f 'MapTile_Box.cpp' || echo '$(srcdir)/'`MapTile_Box.cpp

clanbomber-MapTile_Box.obj: MapTile_Box.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapTile_Box.obj -MD -MP -MF $(DEPDIR)/clanbomber-MapTile_Box.Tpo -c -o clanbomber-MapTile_Box.obj `if test -f 'MapTile_Box.cpp'; then $(CYGPATH_W) 'MapTile_Box.cpp'; else $(CYGPATH_W) '$(srcdir)/MapTile_Box.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapTile_Box.Tpo $(DEPDIR)/clanbomber-MapTile_Box.Po
#	$(AM_V_CXX)source='MapTile_Box.cpp' object='clanbomber-MapTile_Box.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapTile_Box.obj `if test -f 'MapTile_Box.cpp'; then $(CYGPATH_W) 'MapTile_Box.cpp'; else $(CYGPATH_W) '$(srcdir)/MapTile_Box.cpp'; fi`

clanbomber-MapTile_Ground.o: MapTile_Ground.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapTile_Ground.o -MD -MP -MF $(DEPDIR)/clanbomber-MapTile_Ground.Tpo -c -o clanbomber-MapTile_Ground.o `test -f 'MapTile_Ground.cpp' || echo '$(srcdir)/'`MapTile_Ground.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapTile_Ground.Tpo $(DEPDIR)/clanbomber-MapTile_Ground.Po
#	$(AM_V_CXX)source='MapTile_Ground.cpp' object='clanbomber-MapTile_Ground.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapTile_Ground.o `test -f 'MapTile_Ground.cpp' || echo '$(srcdir)/'`MapTile_Ground.cpp

clanbomber-MapTile_Ground.obj: MapTile_Ground.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapTile_Ground.obj -MD -MP -MF $(DEPDIR)/clanbomber-MapTile_Ground.Tpo -c -o clanbomber-MapTile_Ground.obj `if test -f 'MapTile_Ground.cpp'; then $(CYGPATH_W) 'MapTile_Ground.cpp'; else $(CYGPATH_W) '$(srcdir)/MapTile_Ground.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapTile_Ground.Tpo $(DEPDIR)/clanbomber-MapTile_Ground.Po
#	$(AM_V_CXX)source='MapTile_Ground.cpp' object='clanbomber-MapTile_Ground.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapTile_Ground.obj `if test -f 'MapTile_Ground.cpp'; then $(CYGPATH_W) 'MapTile_Ground.cpp'; else $(CYGPATH_W) '$(srcdir)/MapTile_Ground.cpp'; fi`

clanbomber-MapTile_Ice.o: MapTile_Ice.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapTile_Ice.o -MD -MP -MF $(DEPDIR)/clanbomber-MapTile_Ice.Tpo -c -o clanbomber-MapTile_Ice.o `test -f 'MapTile_Ice.cpp' || echo '$(srcdir)/'`MapTile_Ice.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapTile_Ice.Tpo $(DEPDIR)/clanbomber-MapTile_Ice.Po
#	$(AM_V_CXX)source='MapTile_Ice.cpp' object='clanbomber-MapTile_Ice.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapTile_Ice.o `test -f 'MapTile_Ice.cpp' || echo '$(srcdir)/'`MapTile_Ice.cpp

clanbomber-MapTile_Ice.obj: MapTile_Ice.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapTile_Ice.obj -MD -MP -MF $(DEPDIR)/clanbomber-MapTile_Ice.Tpo -c -o clanbomber-MapTile_Ice.obj `if test -f 'MapTile_Ice.cpp'; then $(CYGPATH_W) 'MapTile_Ice.cpp'; else $(CYGPATH_W) '$(srcdir)/MapTile_Ice.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapTile_Ice.Tpo $(DEPDIR)/clanbomber-MapTile_Ice.Po
#	$(AM_V_CXX)source='MapTile_Ice.cpp' object='clanbomber-MapTile_Ice.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapTile_Ice.obj `if test -f 'MapTile_Ice.cpp'; then $(CYGPATH_W) 'MapTile_Ice.cpp'; else $(CYGPATH_W) '$(srcdir)/MapTile_Ice.cpp'; fi`

clanbomber-MapTile_None.o: MapTile_None.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapTile_None.o -MD -MP -MF $(DEPDIR)/clanbomber-MapTile_None.Tpo -c -o clanbomber-MapTile_None.o `test -f 'MapTile_None.cpp' || echo '$(srcdir)/'`MapTile_None.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapTile_None.Tpo $(DEPDIR)/clanbomber-MapTile_None.Po
#	$(AM_V_CXX)source='MapTile_None.cpp' object='clanbomber-MapTile_None.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapTile_None.o `test -f 'MapTile_None.cpp' || echo '$(srcdir)/'`MapTile_None.cpp

clanbomber-MapTile_None.obj: MapTile_None.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapTile_None.obj -MD -MP -MF $(DEPDIR)/clanbomber-MapTile_None.Tpo -c -o clanbomber-MapTile_None.obj `if test -f 'MapTile_None.cpp'; then $(CYGPATH_W) 'MapTile_None.cpp'; else $(CYGPATH_W) '$(srcdir)/MapTile_None.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapTile_None.Tpo $(DEPDIR)/clanbomber-MapTile_None.Po
#	$(AM_V_CXX)source='MapTile_None.cpp' object='clanbomber-MapTile_None.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapTile_None.obj `if test -f 'MapTile_None.cpp'; then $(CYGPATH_W) 'MapTile_None.cpp'; else $(CYGPATH_W) '$(srcdir)/MapTile_None.cpp'; fi`

clanbomber-MapTile_Trap.o: MapTile_Trap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapTile_Trap.o -MD -MP -MF $(DEPDIR)/clanbomber-MapTile_Trap.Tpo -c -o clanbomber-MapTile_Trap.o `test -f 'MapTile_Trap.cpp' || echo '$(srcdir)/'`MapTile_Trap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapTile_Trap.Tpo $(DEPDIR)/clanbomber-MapTile_Trap.Po
#	$(AM_V_CXX)source='MapTile_Trap.cpp' object='clanbomber-MapTile_Trap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapTile_Trap.o `test -f 'MapTile_Trap.cpp' || echo '$(srcdir)/'`MapTile_Trap.cpp

clanbomber-MapTile_Trap.obj: MapTile_Trap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapTile_Trap.obj -MD -MP -MF $(DEPDIR)/clanbomber-MapTile_Trap.Tpo -c -o clanbomber-MapTile_Trap.obj `if test -f 'MapTile_Trap.cpp'; then $(CYGPATH_W) 'MapTile_Trap.cpp'; else $(CYGPATH_W) '$(srcdir)/MapTile_Trap.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapTile_Trap.Tpo $(DEPDIR)/clanbomber-MapTile_Trap.Po
#	$(AM_V_CXX)source='MapTile_Trap.cpp' object='clanbomber-MapTile_Trap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapTile_Trap.obj `if test -f 'MapTile_Trap.cpp'; then $(CYGPATH_W) 'MapTile_Trap.cpp'; else $(CYGPATH_W) '$(srcdir)/MapTile_Trap.cpp'; fi`

clanbomber-MapTile_Wall.o: MapTile_Wall.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapTile_Wall.o -MD -MP -MF $(DEPDIR)/clanbomber-MapTile_Wall.Tpo -c -o clanbomber-MapTile_Wall.o `test -f 'MapTile_Wall.cpp' || echo '$(srcdir)/'`MapTile_Wall.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapTile_Wall.Tpo $(DEPDIR)/clanbomber-MapTile_Wall.Po
#	$(AM_V_CXX)source='MapTile_Wall.cpp' object='clanbomber-MapTile_Wall.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapTile_Wall.o `test -f 'MapTile_Wall.cpp' || echo '$(srcdir)/'`MapTile_Wall.cpp

clanbomber-MapTile_Wall.obj: MapTile_Wall.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-MapTile_Wall.obj -MD -MP -MF $(DEPDIR)/clanbomber-MapTile_Wall.Tpo -c -o clanbomber-MapTile_Wall.obj `if test -f 'MapTile_Wall.cpp'; then $(CYGPATH_W) 'MapTile_Wall.cpp'; else $(CYGPATH_W) '$(srcdir)/MapTile_Wall.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-MapTile_Wall.Tpo $(DEPDIR)/clanbomber-MapTile_Wall.Po
#	$(AM_V_CXX)source='MapTile_Wall.cpp' object='clanbomber-MapTile_Wall.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-MapTile_Wall.obj `if test -f 'MapTile_Wall.cpp'; then $(CYGPATH_W) 'MapTile_Wall.cpp'; else $(CYGPATH_W) '$(srcdir)/MapTile_Wall.cpp'; fi`

clanbomber-Menu.o: Menu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Menu.o -MD -MP -MF $(DEPDIR)/clanbomber-Menu.Tpo -c -o clanbomber-Menu.o `test -f 'Menu.cpp' || echo '$(srcdir)/'`Menu.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Menu.Tpo $(DEPDIR)/clanbomber-Menu.Po
#	$(AM_V_CXX)source='Menu.cpp' object='clanbomber-Menu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Menu.o `test -f 'Menu.cpp' || echo '$(srcdir)/'`Menu.cpp

clanbomber-Menu.obj: Menu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Menu.obj -MD -MP -MF $(DEPDIR)/clanbomber-Menu.Tpo -c -o clanbomber-Menu.obj `if test -f 'Menu.cpp'; then $(CYGPATH_W) 'Menu.cpp'; else $(CYGPATH_W) '$(srcdir)/Menu.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Menu.Tpo $(DEPDIR)/clanbomber-Menu.Po
#	$(AM_V_CXX)source='Menu.cpp' object='clanbomber-Menu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Menu.obj `if test -f 'Menu.cpp'; then $(CYGPATH_W) 'Menu.cpp'; else $(CYGPATH_W) '$(srcdir)/Menu.cpp'; fi`

clanbomber-Mutex.o: Mutex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Mutex.o -MD -MP -MF $(DEPDIR)/clanbomber-Mutex.Tpo -c -o clanbomber-Mutex.o `test -f 'Mutex.cpp' || echo '$(srcdir)/'`Mutex.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Mutex.Tpo $(DEPDIR)/clanbomber-Mutex.Po
#	$(AM_V_CXX)source='Mutex.cpp' object='clanbomber-Mutex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Mutex.o `test -f 'Mutex.cpp' || echo '$(srcdir)/'`Mutex.cpp

clanbomber-Mutex.obj: Mutex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Mutex.obj -MD -MP -MF $(DEPDIR)/clanbomber-Mutex.Tpo -c -o clanbomber-Mutex.obj `if test -f 'Mutex.cpp'; then $(CYGPATH_W) 'Mutex.cpp'; else $(CYGPATH_W) '$(srcdir)/Mutex.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Mutex.Tpo $(DEPDIR)/clanbomber-Mutex.Po
#	$(AM_V_CXX)source='Mutex.cpp' object='clanbomber-Mutex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Mutex.obj `if test -f 'Mutex.cpp'; then $(CYGPATH_W) 'Mutex.cpp'; else $(CYGPATH_W) '$(srcdir)/Mutex.cpp'; fi`

clanbomber-Observer.o: Observer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Observer.o -MD -MP -MF $(DEPDIR)/clanbomber-Observer.Tpo -c -o clanbomber-Observer.o `test -f 'Observer.cpp' || echo '$(srcdir)/'`Observer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Observer.Tpo $(DEPDIR)/clanbomber-Observer.Po
#	$(AM_V_CXX)source='Observer.cpp' object='clanbomber-Observer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Observer.o `test -f 'Observer.cpp' || echo '$(srcdir)/'`Observer.cpp

clanbomber-Observer.obj: Observer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Observer.obj -MD -MP -MF $(DEPDIR)/clanbomber-Observer.Tpo -c -o clanbomber-Observer.obj `if test -f 'Observer.cpp'; then $(CYGPATH_W) 'Observer.cpp'; else $(CYGPATH_W) '$(srcdir)/Observer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Observer.Tpo $(DEPDIR)/clanbomber-Observer.Po
#	$(AM_V_CXX)source='Observer.cpp' object='clanbomber-Observer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Observer.obj `if test -f 'Observer.cpp'; then $(CYGPATH_W) 'Observer.cpp'; else $(CYGPATH_W) '$(srcdir)/Observer.cpp'; fi`

clanbomber-PlayerSetup.o: PlayerSetup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-PlayerSetup.o -MD -MP -MF $(DEPDIR)/clanbomber-PlayerSetup.Tpo -c -o clanbomber-PlayerSetup.o `test -f 'PlayerSetup.cpp' || echo '$(srcdir)/'`PlayerSetup.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-PlayerSetup.Tpo $(DEPDIR)/clanbomber-PlayerSetup.Po
#	$(AM_V_CXX)source='PlayerSetup.cpp' object='clanbomber-PlayerSetup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-PlayerSetup.o `test -f 'PlayerSetup.cpp' || echo '$(srcdir)/'`PlayerSetup.cpp

clanbomber-PlayerSetup.obj: PlayerSetup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-PlayerSetup.obj -MD -MP -MF $(DEPDIR)/clanbomber-PlayerSetup.Tpo -c -o clanbomber-PlayerSetup.obj `if test -f 'PlayerSetup.cpp'; then $(CYGPATH_W) 'PlayerSetup.cpp'; else $(CYGPATH_W) '$(srcdir)/PlayerSetup.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-PlayerSetup.Tpo $(DEPDIR)/clanbomber-PlayerSetup.Po
#	$(AM_V_CXX)source='PlayerSetup.cpp' object='clanbomber-PlayerSetup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-PlayerSetup.obj `if test -f 'PlayerSetup.cpp'; then $(CYGPATH_W) 'PlayerSetup.cpp'; else $(CYGPATH_W) '$(srcdir)/PlayerSetup.cpp'; fi`

clanbomber-Resources.o: Resources.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Resources.o -MD -MP -MF $(DEPDIR)/clanbomber-Resources.Tpo -c -o clanbomber-Resources.o `test -f 'Resources.cpp' || echo '$(srcdir)/'`Resources.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Resources.Tpo $(DEPDIR)/clanbomber-Resources.Po
#	$(AM_V_CXX)source='Resources.cpp' object='clanbomber-Resources.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Resources.o `test -f 'Resources.cpp' || echo '$(srcdir)/'`Resources.cpp

clanbomber-Resources.obj: Resources.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Resources.obj -MD -MP -MF $(DEPDIR)/clanbomber-Resources.Tpo -c -o clanbomber-Resources.obj `if test -f 'Resources.cpp'; then $(CYGPATH_W) 'Resources.cpp'; else $(CYGPATH_W) '$(srcdir)/Resources.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Resources.Tpo $(DEPDIR)/clanbomber-Resources.Po
#	$(AM_V_CXX)source='Resources.cpp' object='clanbomber-Resources.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Resources.obj `if test -f 'Resources.cpp'; then $(CYGPATH_W) 'Resources.cpp'; else $(CYGPATH_W) '$(srcdir)/Resources.cpp'; fi`

clanbomber-Server.o: Server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Server.o -MD -MP -MF $(DEPDIR)/clanbomber-Server.Tpo -c -o clanbomber-Server.o `test -f 'Server.cpp' || echo '$(srcdir)/'`Server.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Server.Tpo $(DEPDIR)/clanbomber-Server.Po
#	$(AM_V_CXX)source='Server.cpp' object='clanbomber-Server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Server.o `test -f 'Server.cpp' || echo '$(srcdir)/'`Server.cpp

clanbomber-Server.obj: Server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Server.obj -MD -MP -MF $(DEPDIR)/clanbomber-Server.Tpo -c -o clanbomber-Server.obj `if test -f 'Server.cpp'; then $(CYGPATH_W) 'Server.cpp'; else $(CYGPATH_W) '$(srcdir)/Server.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Server.Tpo $(DEPDIR)/clanbomber-Server.Po
#	$(AM_V_CXX)source='Server.cpp' object='clanbomber-Server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Server.obj `if test -f 'Server.cpp'; then $(CYGPATH_W) 'Server.cpp'; else $(CYGPATH_W) '$(srcdir)/Server.cpp'; fi`

clanbomber-ServerSetup.o: ServerSetup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-ServerSetup.o -MD -MP -MF $(DEPDIR)/clanbomber-ServerSetup.Tpo -c -o clanbomber-ServerSetup.o `test -f 'ServerSetup.cpp' || echo '$(srcdir)/'`ServerSetup.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-ServerSetup.Tpo $(DEPDIR)/clanbomber-ServerSetup.Po
#	$(AM_V_CXX)source='ServerSetup.cpp' object='clanbomber-ServerSetup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-ServerSetup.o `test -f 'ServerSetup.cpp' || echo '$(srcdir)/'`ServerSetup.cpp

clanbomber-ServerSetup.obj: ServerSetup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-ServerSetup.obj -MD -MP -MF $(DEPDIR)/clanbomber-ServerSetup.Tpo -c -o clanbomber-ServerSetup.obj `if test -f 'ServerSetup.cpp'; then $(CYGPATH_W) 'ServerSetup.cpp'; else $(CYGPATH_W) '$(srcdir)/ServerSetup.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-ServerSetup.Tpo $(DEPDIR)/clanbomber-ServerSetup.Po
#	$(AM_V_CXX)source='ServerSetup.cpp' object='clanbomber-ServerSetup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-ServerSetup.obj `if test -f 'ServerSetup.cpp'; then $(CYGPATH_W) 'ServerSetup.cpp'; else $(CYGPATH_W) '$(srcdir)/ServerSetup.cpp'; fi`

clanbomber-Timer.o: Timer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Timer.o -MD -MP -MF $(DEPDIR)/clanbomber-Timer.Tpo -c -o clanbomber-Timer.o `test -f 'Timer.cpp' || echo '$(srcdir)/'`Timer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Timer.Tpo $(DEPDIR)/clanbomber-Timer.Po
#	$(AM_V_CXX)source='Timer.cpp' object='clanbomber-Timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Timer.o `test -f 'Timer.cpp' || echo '$(srcdir)/'`Timer.cpp

clanbomber-Timer.obj: Timer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Timer.obj -MD -MP -MF $(DEPDIR)/clanbomber-Timer.Tpo -c -o clanbomber-Timer.obj `if test -f 'Timer.cpp'; then $(CYGPATH_W) 'Timer.cpp'; else $(CYGPATH_W) '$(srcdir)/Timer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Timer.Tpo $(DEPDIR)/clanbomber-Timer.Po
#	$(AM_V_CXX)source='Timer.cpp' object='clanbomber-Timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Timer.obj `if test -f 'Timer.cpp'; then $(CYGPATH_W) 'Timer.cpp'; else $(CYGPATH_W) '$(srcdir)/Timer.cpp'; fi`

clanbomber-Thread.o: Thread.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Thread.o -MD -MP -MF $(DEPDIR)/clanbomber-Thread.Tpo -c -o clanbomber-Thread.o `test -f 'Thread.cpp' || echo '$(srcdir)/'`Thread.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Thread.Tpo $(DEPDIR)/clanbomber-Thread.Po
#	$(AM_V_CXX)source='Thread.cpp' object='clanbomber-Thread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Thread.o `test -f 'Thread.cpp' || echo '$(srcdir)/'`Thread.cpp

clanbomber-Thread.obj: Thread.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Thread.obj -MD -MP -MF $(DEPDIR)/clanbomber-Thread.Tpo -c -o clanbomber-Thread.obj `if test -f 'Thread.cpp'; then $(CYGPATH_W) 'Thread.cpp'; else $(CYGPATH_W) '$(srcdir)/Thread.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Thread.Tpo $(DEPDIR)/clanbomber-Thread.Po
#	$(AM_V_CXX)source='Thread.cpp' object='clanbomber-Thread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Thread.obj `if test -f 'Thread.cpp'; then $(CYGPATH_W) 'Thread.cpp'; else $(CYGPATH_W) '$(srcdir)/Thread.cpp'; fi`

clanbomber-Utils.o: Utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Utils.o -MD -MP -MF $(DEPDIR)/clanbomber-Utils.Tpo -c -o clanbomber-Utils.o `test -f 'Utils.cpp' || echo '$(srcdir)/'`Utils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Utils.Tpo $(DEPDIR)/clanbomber-Utils.Po
#	$(AM_V_CXX)source='Utils.cpp' object='clanbomber-Utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Utils.o `test -f 'Utils.cpp' || echo '$(srcdir)/'`Utils.cpp

clanbomber-Utils.obj: Utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Utils.obj -MD -MP -MF $(DEPDIR)/clanbomber-Utils.Tpo -c -o clanbomber-Utils.obj `if test -f 'Utils.cpp'; then $(CYGPATH_W) 'Utils.cpp'; else $(CYGPATH_W) '$(srcdir)/Utils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Utils.Tpo $(DEPDIR)/clanbomber-Utils.Po
#	$(AM_V_CXX)source='Utils.cpp' object='clanbomber-Utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Utils.obj `if test -f 'Utils.cpp'; then $(CYGPATH_W) 'Utils.cpp'; else $(CYGPATH_W) '$(srcdir)/Utils.cpp'; fi`

clanbomber-UtilsThreads.o: UtilsThreads.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-UtilsThreads.o -MD -MP -MF $(DEPDIR)/clanbomber-UtilsThreads.Tpo -c -o clanbomber-UtilsThreads.o `test -f 'UtilsThreads.cpp' || echo '$(srcdir)/'`UtilsThreads.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-UtilsThreads.Tpo $(DEPDIR)/clanbomber-UtilsThreads.Po
#	$(AM_V_CXX)source='UtilsThreads.cpp' object='clanbomber-UtilsThreads.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-UtilsThreads.o `test -f 'UtilsThreads.cpp' || echo '$(srcdir)/'`UtilsThreads.cpp

clanbomber-UtilsThreads.obj: UtilsThreads.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-UtilsThreads.obj -MD -MP -MF $(DEPDIR)/clanbomber-UtilsThreads.Tpo -c -o clanbomber-UtilsThreads.obj `if test -f 'UtilsThreads.cpp'; then $(CYGPATH_W) 'UtilsThreads.cpp'; else $(CYGPATH_W) '$(srcdir)/UtilsThreads.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-UtilsThreads.Tpo $(DEPDIR)/clanbomber-UtilsThreads.Po
#	$(AM_V_CXX)source='UtilsThreads.cpp' object='clanbomber-UtilsThreads.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-UtilsThreads.obj `if test -f 'UtilsThreads.cpp'; then $(CYGPATH_W) 'UtilsThreads.cpp'; else $(CYGPATH_W) '$(srcdir)/UtilsThreads.cpp'; fi`

clanbomber-UtilsAccess.o: UtilsAccess.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-UtilsAccess.o -MD -MP -MF $(DEPDIR)/clanbomber-UtilsAccess.Tpo -c -o clanbomber-UtilsAccess.o `test -f 'UtilsAccess.cpp' || echo '$(srcdir)/'`UtilsAccess.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-UtilsAccess.Tpo $(DEPDIR)/clanbomber-UtilsAccess.Po
#	$(AM_V_CXX)source='UtilsAccess.cpp' object='clanbomber-UtilsAccess.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-UtilsAccess.o `test -f 'UtilsAccess.cpp' || echo '$(srcdir)/'`UtilsAccess.cpp

clanbomber-UtilsAccess.obj: UtilsAccess.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-UtilsAccess.obj -MD -MP -MF $(DEPDIR)/clanbomber-UtilsAccess.Tpo -c -o clanbomber-UtilsAccess.obj `if test -f 'UtilsAccess.cpp'; then $(CYGPATH_W) 'UtilsAccess.cpp'; else $(CYGPATH_W) '$(srcdir)/UtilsAccess.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-UtilsAccess.Tpo $(DEPDIR)/clanbomber-UtilsAccess.Po
#	$(AM_V_CXX)source='UtilsAccess.cpp' object='clanbomber-UtilsAccess.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-UtilsAccess.obj `if test -f 'UtilsAccess.cpp'; then $(CYGPATH_W) 'UtilsAccess.cpp'; else $(CYGPATH_W) '$(srcdir)/UtilsAccess.cpp'; fi`

clanbomber-UtilsSleep.o: UtilsSleep.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-UtilsSleep.o -MD -MP -MF $(DEPDIR)/clanbomber-UtilsSleep.Tpo -c -o clanbomber-UtilsSleep.o `test -f 'UtilsSleep.cpp' || echo '$(srcdir)/'`UtilsSleep.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-UtilsSleep.Tpo $(DEPDIR)/clanbomber-UtilsSleep.Po
#	$(AM_V_CXX)source='UtilsSleep.cpp' object='clanbomber-UtilsSleep.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-UtilsSleep.o `test -f 'UtilsSleep.cpp' || echo '$(srcdir)/'`UtilsSleep.cpp

clanbomber-UtilsSleep.obj: UtilsSleep.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-UtilsSleep.obj -MD -MP -MF $(DEPDIR)/clanbomber-UtilsSleep.Tpo -c -o clanbomber-UtilsSleep.obj `if test -f 'UtilsSleep.cpp'; then $(CYGPATH_W) 'UtilsSleep.cpp'; else $(CYGPATH_W) '$(srcdir)/UtilsSleep.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-UtilsSleep.Tpo $(DEPDIR)/clanbomber-UtilsSleep.Po
#	$(AM_V_CXX)source='UtilsSleep.cpp' object='clanbomber-UtilsSleep.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-UtilsSleep.obj `if test -f 'UtilsSleep.cpp'; then $(CYGPATH_W) 'UtilsSleep.cpp'; else $(CYGPATH_W) '$(srcdir)/UtilsSleep.cpp'; fi`

clanbomber-UtilsGetHome.o: UtilsGetHome.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-UtilsGetHome.o -MD -MP -MF $(DEPDIR)/clanbomber-UtilsGetHome.Tpo -c -o clanbomber-UtilsGetHome.o `test -f 'UtilsGetHome.cpp' || echo '$(srcdir)/'`UtilsGetHome.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-UtilsGetHome.Tpo $(DEPDIR)/clanbomber-UtilsGetHome.Po
#	$(AM_V_CXX)source='UtilsGetHome.cpp' object='clanbomber-UtilsGetHome.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-UtilsGetHome.o `test -f 'UtilsGetHome.cpp' || echo '$(srcdir)/'`UtilsGetHome.cpp

clanbomber-UtilsGetHome.obj: UtilsGetHome.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-UtilsGetHome.obj -MD -MP -MF $(DEPDIR)/clanbomber-UtilsGetHome.Tpo -c -o clanbomber-UtilsGetHome.obj `if test -f 'UtilsGetHome.cpp'; then $(CYGPATH_W) 'UtilsGetHome.cpp'; else $(CYGPATH_W) '$(srcdir)/UtilsGetHome.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-UtilsGetHome.Tpo $(DEPDIR)/clanbomber-UtilsGetHome.Po
#	$(AM_V_CXX)source='UtilsGetHome.cpp' object='clanbomber-UtilsGetHome.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-UtilsGetHome.obj `if test -f 'UtilsGetHome.cpp'; then $(CYGPATH_W) 'UtilsGetHome.cpp'; else $(CYGPATH_W) '$(srcdir)/UtilsGetHome.cpp'; fi`

clanbomber-Console.o: Console.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Console.o -MD -MP -MF $(DEPDIR)/clanbomber-Console.Tpo -c -o clanbomber-Console.o `test -f 'Console.cpp' || echo '$(srcdir)/'`Console.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Console.Tpo $(DEPDIR)/clanbomber-Console.Po
#	$(AM_V_CXX)source='Console.cpp' object='clanbomber-Console.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Console.o `test -f 'Console.cpp' || echo '$(srcdir)/'`Console.cpp

clanbomber-Console.obj: Console.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Console.obj -MD -MP -MF $(DEPDIR)/clanbomber-Console.Tpo -c -o clanbomber-Console.obj `if test -f 'Console.cpp'; then $(CYGPATH_W) 'Console.cpp'; else $(CYGPATH_W) '$(srcdir)/Console.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Console.Tpo $(DEPDIR)/clanbomber-Console.Po
#	$(AM_V_CXX)source='Console.cpp' object='clanbomber-Console.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Console.obj `if test -f 'Console.cpp'; then $(CYGPATH_W) 'Console.cpp'; else $(CYGPATH_W) '$(srcdir)/Console.cpp'; fi`

clanbomber-Disease_Slow.o: Disease_Slow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Disease_Slow.o -MD -MP -MF $(DEPDIR)/clanbomber-Disease_Slow.Tpo -c -o clanbomber-Disease_Slow.o `test -f 'Disease_Slow.cpp' || echo '$(srcdir)/'`Disease_Slow.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Disease_Slow.Tpo $(DEPDIR)/clanbomber-Disease_Slow.Po
#	$(AM_V_CXX)source='Disease_Slow.cpp' object='clanbomber-Disease_Slow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Disease_Slow.o `test -f 'Disease_Slow.cpp' || echo '$(srcdir)/'`Disease_Slow.cpp

clanbomber-Disease_Slow.obj: Disease_Slow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Disease_Slow.obj -MD -MP -MF $(DEPDIR)/clanbomber-Disease_Slow.Tpo -c -o clanbomber-Disease_Slow.obj `if test -f 'Disease_Slow.cpp'; then $(CYGPATH_W) 'Disease_Slow.cpp'; else $(CYGPATH_W) '$(srcdir)/Disease_Slow.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Disease_Slow.Tpo $(DEPDIR)/clanbomber-Disease_Slow.Po
#	$(AM_V_CXX)source='Disease_Slow.cpp' object='clanbomber-Disease_Slow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Disease_Slow.obj `if test -f 'Disease_Slow.cpp'; then $(CYGPATH_W) 'Disease_Slow.cpp'; else $(CYGPATH_W) '$(srcdir)/Disease_Slow.cpp'; fi`

clanbomber-Extra_Snail.o: Extra_Snail.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Snail.o -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Snail.Tpo -c -o clanbomber-Extra_Snail.o `test -f 'Extra_Snail.cpp' || echo '$(srcdir)/'`Extra_Snail.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Snail.Tpo $(DEPDIR)/clanbomber-Extra_Snail.Po
#	$(AM_V_CXX)source='Extra_Snail.cpp' object='clanbomber-Extra_Snail.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Snail.o `test -f 'Extra_Snail.cpp' || echo '$(srcdir)/'`Extra_Snail.cpp

clanbomber-Extra_Snail.obj: Extra_Snail.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -MT clanbomber-Extra_Snail.obj -MD -MP -MF $(DEPDIR)/clanbomber-Extra_Snail.Tpo -c -o clanbomber-Extra_Snail.obj `if test -f 'Extra_Snail.cpp'; then $(CYGPATH_W) 'Extra_Snail.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Snail.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/clanbomber-Extra_Snail.Tpo $(DEPDIR)/clanbomber-Extra_Snail.Po
#	$(AM_V_CXX)source='Extra_Snail.cpp' object='clanbomber-Extra_Snail.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(clanbomber_CXXFLAGS) $(CXXFLAGS) -c -o clanbomber-Extra_Snail.obj `if test -f 'Extra_Snail.cpp'; then $(CYGPATH_W) 'Extra_Snail.cpp'; else $(CYGPATH_W) '$(srcdir)/Extra_Snail.cpp'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-recursive
		-rm -f ./$(DEPDIR)/clanbomber-Bomb.Po
	-rm -f ./$(DEPDIR)/clanbomber-Bomber.Po
	-rm -f ./$(DEPDIR)/clanbomber-Bomber_Corpse.Po
	-rm -f ./$(DEPDIR)/clanbomber-Chat.Po
	-rm -f ./$(DEPDIR)/clanbomber-ClanBomber.Po
	-rm -f ./$(DEPDIR)/clanbomber-Client.Po
	-rm -f ./$(DEPDIR)/clanbomber-ClientSetup.Po
	-rm -f ./$(DEPDIR)/clanbomber-Console.Po
	-rm -f ./$(DEPDIR)/clanbomber-Controller.Po
	-rm -f ./$(DEPDIR)/clanbomber-Controller_AI.Po
	-rm -f ./$(DEPDIR)/clanbomber-Controller_AI_mass.Po
	-rm -f ./$(DEPDIR)/clanbomber-Controller_Joystick.Po
	-rm -f ./$(DEPDIR)/clanbomber-Controller_Keyboard.Po
	-rm -f ./$(DEPDIR)/clanbomber-Controller_RCMouse.Po
	-rm -f ./$(DEPDIR)/clanbomber-Corpse_Part.Po
	-rm -f ./$(DEPDIR)/clanbomber-Credits.Po
	-rm -f ./$(DEPDIR)/clanbomber-Disease.Po
	-rm -f ./$(DEPDIR)/clanbomber-Disease_Fast.Po
	-rm -f ./$(DEPDIR)/clanbomber-Disease_Frozen.Po
	-rm -f ./$(DEPDIR)/clanbomber-Disease_PutBomb.Po
	-rm -f ./$(DEPDIR)/clanbomber-Disease_Slow.Po
	-rm -f ./$(DEPDIR)/clanbomber-Disease_Stoned.Po
	-rm -f ./$(DEPDIR)/clanbomber-Event.Po
	-rm -f ./$(DEPDIR)/clanbomber-Explosion.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Bomb.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Glove.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Joint.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Kick.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Koks.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Power.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Skateboard.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Snail.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Viagra.Po
	-rm -f ./$(DEPDIR)/clanbomber-GameConfig.Po
	-rm -f ./$(DEPDIR)/clanbomber-GameObject.Po
	-rm -f ./$(DEPDIR)/clanbomber-GameStatus.Po
	-rm -f ./$(DEPDIR)/clanbomber-GameStatus_Team.Po
	-rm -f ./$(DEPDIR)/clanbomber-Map.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapEditor.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapEntry.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapSelector.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapTile.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapTile_Arrow.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapTile_Box.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapTile_Ground.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapTile_Ice.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapTile_None.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapTile_Trap.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapTile_Wall.Po
	-rm -f ./$(DEPDIR)/clanbomber-Menu.Po
	-rm -f ./$(DEPDIR)/clanbomber-Mutex.Po
	-rm -f ./$(DEPDIR)/clanbomber-Observer.Po
	-rm -f ./$(DEPDIR)/clanbomber-PlayerSetup.Po
	-rm -f ./$(DEPDIR)/clanbomber-Resources.Po
	-rm -f ./$(DEPDIR)/clanbomber-Server.Po
	-rm -f ./$(DEPDIR)/clanbomber-ServerSetup.Po
	-rm -f ./$(DEPDIR)/clanbomber-Thread.Po
	-rm -f ./$(DEPDIR)/clanbomber-Timer.Po
	-rm -f ./$(DEPDIR)/clanbomber-Utils.Po
	-rm -f ./$(DEPDIR)/clanbomber-UtilsAccess.Po
	-rm -f ./$(DEPDIR)/clanbomber-UtilsGetHome.Po
	-rm -f ./$(DEPDIR)/clanbomber-UtilsSleep.Po
	-rm -f ./$(DEPDIR)/clanbomber-UtilsThreads.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
		-rm -f ./$(DEPDIR)/clanbomber-Bomb.Po
	-rm -f ./$(DEPDIR)/clanbomber-Bomber.Po
	-rm -f ./$(DEPDIR)/clanbomber-Bomber_Corpse.Po
	-rm -f ./$(DEPDIR)/clanbomber-Chat.Po
	-rm -f ./$(DEPDIR)/clanbomber-ClanBomber.Po
	-rm -f ./$(DEPDIR)/clanbomber-Client.Po
	-rm -f ./$(DEPDIR)/clanbomber-ClientSetup.Po
	-rm -f ./$(DEPDIR)/clanbomber-Console.Po
	-rm -f ./$(DEPDIR)/clanbomber-Controller.Po
	-rm -f ./$(DEPDIR)/clanbomber-Controller_AI.Po
	-rm -f ./$(DEPDIR)/clanbomber-Controller_AI_mass.Po
	-rm -f ./$(DEPDIR)/clanbomber-Controller_Joystick.Po
	-rm -f ./$(DEPDIR)/clanbomber-Controller_Keyboard.Po
	-rm -f ./$(DEPDIR)/clanbomber-Controller_RCMouse.Po
	-rm -f ./$(DEPDIR)/clanbomber-Corpse_Part.Po
	-rm -f ./$(DEPDIR)/clanbomber-Credits.Po
	-rm -f ./$(DEPDIR)/clanbomber-Disease.Po
	-rm -f ./$(DEPDIR)/clanbomber-Disease_Fast.Po
	-rm -f ./$(DEPDIR)/clanbomber-Disease_Frozen.Po
	-rm -f ./$(DEPDIR)/clanbomber-Disease_PutBomb.Po
	-rm -f ./$(DEPDIR)/clanbomber-Disease_Slow.Po
	-rm -f ./$(DEPDIR)/clanbomber-Disease_Stoned.Po
	-rm -f ./$(DEPDIR)/clanbomber-Event.Po
	-rm -f ./$(DEPDIR)/clanbomber-Explosion.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Bomb.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Glove.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Joint.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Kick.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Koks.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Power.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Skateboard.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Snail.Po
	-rm -f ./$(DEPDIR)/clanbomber-Extra_Viagra.Po
	-rm -f ./$(DEPDIR)/clanbomber-GameConfig.Po
	-rm -f ./$(DEPDIR)/clanbomber-GameObject.Po
	-rm -f ./$(DEPDIR)/clanbomber-GameStatus.Po
	-rm -f ./$(DEPDIR)/clanbomber-GameStatus_Team.Po
	-rm -f ./$(DEPDIR)/clanbomber-Map.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapEditor.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapEntry.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapSelector.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapTile.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapTile_Arrow.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapTile_Box.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapTile_Ground.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapTile_Ice.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapTile_None.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapTile_Trap.Po
	-rm -f ./$(DEPDIR)/clanbomber-MapTile_Wall.Po
	-rm -f ./$(DEPDIR)/clanbomber-Menu.Po
	-rm -f ./$(DEPDIR)/clanbomber-Mutex.Po
	-rm -f ./$(DEPDIR)/clanbomber-Observer.Po
	-rm -f ./$(DEPDIR)/clanbomber-PlayerSetup.Po
	-rm -f ./$(DEPDIR)/clanbomber-Resources.Po
	-rm -f ./$(DEPDIR)/clanbomber-Server.Po
	-rm -f ./$(DEPDIR)/clanbomber-ServerSetup.Po
	-rm -f ./$(DEPDIR)/clanbomber-Thread.Po
	-rm -f ./$(DEPDIR)/clanbomber-Timer.Po
	-rm -f ./$(DEPDIR)/clanbomber-Utils.Po
	-rm -f ./$(DEPDIR)/clanbomber-UtilsAccess.Po
	-rm -f ./$(DEPDIR)/clanbomber-UtilsGetHome.Po
	-rm -f ./$(DEPDIR)/clanbomber-UtilsSleep.Po
	-rm -f ./$(DEPDIR)/clanbomber-UtilsThreads.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-am clean clean-binPROGRAMS \
	clean-generic cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
